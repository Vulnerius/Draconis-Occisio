id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: UserInterface
  commentId: N:UserInterface
  language: CSharp
  name:
    CSharp: UserInterface
    VB: UserInterface
  nameWithType:
    CSharp: UserInterface
    VB: UserInterface
  qualifiedName:
    CSharp: UserInterface
    VB: UserInterface
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: UserInterface.PauseMenu
    commentId: T:UserInterface.PauseMenu
    language: CSharp
    name:
      CSharp: PauseMenu
      VB: PauseMenu
    nameWithType:
      CSharp: PauseMenu
      VB: PauseMenu
    qualifiedName:
      CSharp: UserInterface.PauseMenu
      VB: UserInterface.PauseMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UserInterface
    source:
      id: PauseMenu
      path: ''
      startLine: 4
    syntax:
      content:
        CSharp: 'public class PauseMenu : MonoBehaviour'
        VB: >-
          Public Class PauseMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: UserInterface.PauseMenu.OnResume
      commentId: M:UserInterface.PauseMenu.OnResume
      language: CSharp
      name:
        CSharp: OnResume()
        VB: OnResume()
      nameWithType:
        CSharp: PauseMenu.OnResume()
        VB: PauseMenu.OnResume()
      qualifiedName:
        CSharp: UserInterface.PauseMenu.OnResume()
        VB: UserInterface.PauseMenu.OnResume()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnResume
        path: ''
        startLine: 10
      summary: "\nSetting GameState to Fight\n"
      example: []
      syntax:
        content:
          CSharp: public void OnResume()
          VB: Public Sub OnResume
      overload: UserInterface.PauseMenu.OnResume*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.PauseMenu.OnExitPause
      commentId: M:UserInterface.PauseMenu.OnExitPause
      language: CSharp
      name:
        CSharp: OnExitPause()
        VB: OnExitPause()
      nameWithType:
        CSharp: PauseMenu.OnExitPause()
        VB: PauseMenu.OnExitPause()
      qualifiedName:
        CSharp: UserInterface.PauseMenu.OnExitPause()
        VB: UserInterface.PauseMenu.OnExitPause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnExitPause
        path: ''
        startLine: 17
      summary: "\nSetting GameState to Defeat\n"
      example: []
      syntax:
        content:
          CSharp: public void OnExitPause()
          VB: Public Sub OnExitPause
      overload: UserInterface.PauseMenu.OnExitPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: UserInterface.MainMenu
    commentId: T:UserInterface.MainMenu
    language: CSharp
    name:
      CSharp: MainMenu
      VB: MainMenu
    nameWithType:
      CSharp: MainMenu
      VB: MainMenu
    qualifiedName:
      CSharp: UserInterface.MainMenu
      VB: UserInterface.MainMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UserInterface
    source:
      id: MainMenu
      path: ''
      startLine: 30
    summary: "\nbehaviour for MainMenu\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MainMenu : MonoBehaviour'
        VB: >-
          Public Class MainMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: UserInterface.MainMenu.OnTutorial
      commentId: M:UserInterface.MainMenu.OnTutorial
      language: CSharp
      name:
        CSharp: OnTutorial()
        VB: OnTutorial()
      nameWithType:
        CSharp: MainMenu.OnTutorial()
        VB: MainMenu.OnTutorial()
      qualifiedName:
        CSharp: UserInterface.MainMenu.OnTutorial()
        VB: UserInterface.MainMenu.OnTutorial()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnTutorial
        path: ''
        startLine: 36
      summary: "\nLoading PlayScene\nSetting GameMode to Tutorial\n"
      example: []
      syntax:
        content:
          CSharp: public void OnTutorial()
          VB: Public Sub OnTutorial
      overload: UserInterface.MainMenu.OnTutorial*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.MainMenu.OnPlay
      commentId: M:UserInterface.MainMenu.OnPlay
      language: CSharp
      name:
        CSharp: OnPlay()
        VB: OnPlay()
      nameWithType:
        CSharp: MainMenu.OnPlay()
        VB: MainMenu.OnPlay()
      qualifiedName:
        CSharp: UserInterface.MainMenu.OnPlay()
        VB: UserInterface.MainMenu.OnPlay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnPlay
        path: ''
        startLine: 44
      summary: "\nEnabling GameModeChooseMenu\n"
      example: []
      syntax:
        content:
          CSharp: public void OnPlay()
          VB: Public Sub OnPlay
      overload: UserInterface.MainMenu.OnPlay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.MainMenu.OnOptions
      commentId: M:UserInterface.MainMenu.OnOptions
      language: CSharp
      name:
        CSharp: OnOptions()
        VB: OnOptions()
      nameWithType:
        CSharp: MainMenu.OnOptions()
        VB: MainMenu.OnOptions()
      qualifiedName:
        CSharp: UserInterface.MainMenu.OnOptions()
        VB: UserInterface.MainMenu.OnOptions()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnOptions
        path: ''
        startLine: 51
      summary: "\nEnabling OptionsMenu\n"
      example: []
      syntax:
        content:
          CSharp: public void OnOptions()
          VB: Public Sub OnOptions
      overload: UserInterface.MainMenu.OnOptions*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.MainMenu.OnExit
      commentId: M:UserInterface.MainMenu.OnExit
      language: CSharp
      name:
        CSharp: OnExit()
        VB: OnExit()
      nameWithType:
        CSharp: MainMenu.OnExit()
        VB: MainMenu.OnExit()
      qualifiedName:
        CSharp: UserInterface.MainMenu.OnExit()
        VB: UserInterface.MainMenu.OnExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnExit
        path: ''
        startLine: 58
      summary: "\nQuitting the Game\n"
      example: []
      syntax:
        content:
          CSharp: public void OnExit()
          VB: Public Sub OnExit
      overload: UserInterface.MainMenu.OnExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: UserInterface.GameModeChooseMenu
    commentId: T:UserInterface.GameModeChooseMenu
    language: CSharp
    name:
      CSharp: GameModeChooseMenu
      VB: GameModeChooseMenu
    nameWithType:
      CSharp: GameModeChooseMenu
      VB: GameModeChooseMenu
    qualifiedName:
      CSharp: UserInterface.GameModeChooseMenu
      VB: UserInterface.GameModeChooseMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UserInterface
    source:
      id: GameModeChooseMenu
      path: ''
      startLine: 71
    summary: "\nBehaviour for GameModeChooseMenu\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameModeChooseMenu : MonoBehaviour'
        VB: >-
          Public Class GameModeChooseMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon1Enter
      language: CSharp
      name:
        CSharp: OnHoverDragon1Enter()
        VB: OnHoverDragon1Enter()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon1Enter()
        VB: GameModeChooseMenu.OnHoverDragon1Enter()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon1Enter
        path: ''
        startLine: 90
      summary: "\nHover-Enter Event for SoulEater Button\nEnabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon1Enter()
          VB: Public Sub OnHoverDragon1Enter
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon1Exit
      language: CSharp
      name:
        CSharp: OnHoverDragon1Exit()
        VB: OnHoverDragon1Exit()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon1Exit()
        VB: GameModeChooseMenu.OnHoverDragon1Exit()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon1Exit
        path: ''
        startLine: 98
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon1Exit()
          VB: Public Sub OnHoverDragon1Exit
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon2Enter
      language: CSharp
      name:
        CSharp: OnHoverDragon2Enter()
        VB: OnHoverDragon2Enter()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon2Enter()
        VB: GameModeChooseMenu.OnHoverDragon2Enter()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon2Enter
        path: ''
        startLine: 106
      summary: "\nHover-Enter Event for SoulEater Button\nEnabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon2Enter()
          VB: Public Sub OnHoverDragon2Enter
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon2Exit
      language: CSharp
      name:
        CSharp: OnHoverDragon2Exit()
        VB: OnHoverDragon2Exit()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon2Exit()
        VB: GameModeChooseMenu.OnHoverDragon2Exit()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon2Exit
        path: ''
        startLine: 114
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon2Exit()
          VB: Public Sub OnHoverDragon2Exit
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon3Enter
      language: CSharp
      name:
        CSharp: OnHoverDragon3Enter()
        VB: OnHoverDragon3Enter()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon3Enter()
        VB: GameModeChooseMenu.OnHoverDragon3Enter()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon3Enter
        path: ''
        startLine: 122
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon3Enter()
          VB: Public Sub OnHoverDragon3Enter
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon3Exit
      language: CSharp
      name:
        CSharp: OnHoverDragon3Exit()
        VB: OnHoverDragon3Exit()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon3Exit()
        VB: GameModeChooseMenu.OnHoverDragon3Exit()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon3Exit
        path: ''
        startLine: 130
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon3Exit()
          VB: Public Sub OnHoverDragon3Exit
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon4Enter
      language: CSharp
      name:
        CSharp: OnHoverDragon4Enter()
        VB: OnHoverDragon4Enter()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon4Enter()
        VB: GameModeChooseMenu.OnHoverDragon4Enter()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon4Enter
        path: ''
        startLine: 138
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon4Enter()
          VB: Public Sub OnHoverDragon4Enter
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverDragon4Exit
      language: CSharp
      name:
        CSharp: OnHoverDragon4Exit()
        VB: OnHoverDragon4Exit()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverDragon4Exit()
        VB: GameModeChooseMenu.OnHoverDragon4Exit()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit()
        VB: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverDragon4Exit
        path: ''
        startLine: 146
      summary: "\nHover-Exit Event for SoulEater Button\nDisabling dragonImage\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverDragon4Exit()
          VB: Public Sub OnHoverDragon4Exit
      overload: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverRandom
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverRandom
      language: CSharp
      name:
        CSharp: OnHoverRandom()
        VB: OnHoverRandom()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverRandom()
        VB: GameModeChooseMenu.OnHoverRandom()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverRandom()
        VB: UserInterface.GameModeChooseMenu.OnHoverRandom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverRandom
        path: ''
        startLine: 153
      summary: "\nEnabling Cycling Dragon Images\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverRandom()
          VB: Public Sub OnHoverRandom
      overload: UserInterface.GameModeChooseMenu.OnHoverRandom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnHoverRandomExit
      commentId: M:UserInterface.GameModeChooseMenu.OnHoverRandomExit
      language: CSharp
      name:
        CSharp: OnHoverRandomExit()
        VB: OnHoverRandomExit()
      nameWithType:
        CSharp: GameModeChooseMenu.OnHoverRandomExit()
        VB: GameModeChooseMenu.OnHoverRandomExit()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnHoverRandomExit()
        VB: UserInterface.GameModeChooseMenu.OnHoverRandomExit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnHoverRandomExit
        path: ''
        startLine: 160
      summary: "\nDisabling Cycling Dragon Images\n"
      example: []
      syntax:
        content:
          CSharp: public void OnHoverRandomExit()
          VB: Public Sub OnHoverRandomExit
      overload: UserInterface.GameModeChooseMenu.OnHoverRandomExit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnRandom
      commentId: M:UserInterface.GameModeChooseMenu.OnRandom
      language: CSharp
      name:
        CSharp: OnRandom()
        VB: OnRandom()
      nameWithType:
        CSharp: GameModeChooseMenu.OnRandom()
        VB: GameModeChooseMenu.OnRandom()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnRandom()
        VB: UserInterface.GameModeChooseMenu.OnRandom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnRandom
        path: ''
        startLine: 187
      summary: "\nButton functionality for Random\nSetting GameMode to Random\n"
      example: []
      syntax:
        content:
          CSharp: public void OnRandom()
          VB: Public Sub OnRandom
      overload: UserInterface.GameModeChooseMenu.OnRandom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnSoloDragon1
      commentId: M:UserInterface.GameModeChooseMenu.OnSoloDragon1
      language: CSharp
      name:
        CSharp: OnSoloDragon1()
        VB: OnSoloDragon1()
      nameWithType:
        CSharp: GameModeChooseMenu.OnSoloDragon1()
        VB: GameModeChooseMenu.OnSoloDragon1()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnSoloDragon1()
        VB: UserInterface.GameModeChooseMenu.OnSoloDragon1()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnSoloDragon1
        path: ''
        startLine: 197
      summary: "\nButton functionality for SoulEater\nsetting currentEnemyIdx to 1\nSetting GameMode to Solo\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSoloDragon1()
          VB: Public Sub OnSoloDragon1
      overload: UserInterface.GameModeChooseMenu.OnSoloDragon1*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnSoloDragon2
      commentId: M:UserInterface.GameModeChooseMenu.OnSoloDragon2
      language: CSharp
      name:
        CSharp: OnSoloDragon2()
        VB: OnSoloDragon2()
      nameWithType:
        CSharp: GameModeChooseMenu.OnSoloDragon2()
        VB: GameModeChooseMenu.OnSoloDragon2()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnSoloDragon2()
        VB: UserInterface.GameModeChooseMenu.OnSoloDragon2()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnSoloDragon2
        path: ''
        startLine: 208
      summary: "\nButton functionality for Nightmare\nsetting currentEnemyIdx to 2\nSetting GameMode to Solo\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSoloDragon2()
          VB: Public Sub OnSoloDragon2
      overload: UserInterface.GameModeChooseMenu.OnSoloDragon2*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnSoloDragon3
      commentId: M:UserInterface.GameModeChooseMenu.OnSoloDragon3
      language: CSharp
      name:
        CSharp: OnSoloDragon3()
        VB: OnSoloDragon3()
      nameWithType:
        CSharp: GameModeChooseMenu.OnSoloDragon3()
        VB: GameModeChooseMenu.OnSoloDragon3()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnSoloDragon3()
        VB: UserInterface.GameModeChooseMenu.OnSoloDragon3()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnSoloDragon3
        path: ''
        startLine: 219
      summary: "\nButton functionality for Usurper\nsetting currentEnemyIdx to 3\nSetting GameMode to Solo\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSoloDragon3()
          VB: Public Sub OnSoloDragon3
      overload: UserInterface.GameModeChooseMenu.OnSoloDragon3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.GameModeChooseMenu.OnSoloDragon4
      commentId: M:UserInterface.GameModeChooseMenu.OnSoloDragon4
      language: CSharp
      name:
        CSharp: OnSoloDragon4()
        VB: OnSoloDragon4()
      nameWithType:
        CSharp: GameModeChooseMenu.OnSoloDragon4()
        VB: GameModeChooseMenu.OnSoloDragon4()
      qualifiedName:
        CSharp: UserInterface.GameModeChooseMenu.OnSoloDragon4()
        VB: UserInterface.GameModeChooseMenu.OnSoloDragon4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: OnSoloDragon4
        path: ''
        startLine: 230
      summary: "\nButton functionality for TerrorBringer\nsetting currentEnemyIdx to 4\nSetting GameMode to Solo\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSoloDragon4()
          VB: Public Sub OnSoloDragon4
      overload: UserInterface.GameModeChooseMenu.OnSoloDragon4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: UserInterface.ScoresTexts
    commentId: T:UserInterface.ScoresTexts
    language: CSharp
    name:
      CSharp: ScoresTexts
      VB: ScoresTexts
    nameWithType:
      CSharp: ScoresTexts
      VB: ScoresTexts
    qualifiedName:
      CSharp: UserInterface.ScoresTexts
      VB: UserInterface.ScoresTexts
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: UserInterface
    source:
      id: ScoresTexts
      path: ''
      startLine: 241
    syntax:
      content:
        CSharp: 'public class ScoresTexts : MonoBehaviour'
        VB: >-
          Public Class ScoresTexts

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: UserInterface.ScoresTexts.bestRun
      commentId: F:UserInterface.ScoresTexts.bestRun
      language: CSharp
      name:
        CSharp: bestRun
        VB: bestRun
      nameWithType:
        CSharp: ScoresTexts.bestRun
        VB: ScoresTexts.bestRun
      qualifiedName:
        CSharp: UserInterface.ScoresTexts.bestRun
        VB: UserInterface.ScoresTexts.bestRun
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: bestRun
        path: ''
        startLine: 242
      syntax:
        content:
          CSharp: public TextMeshProUGUI bestRun
          VB: Public bestRun As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.ScoresTexts.secondbestRun
      commentId: F:UserInterface.ScoresTexts.secondbestRun
      language: CSharp
      name:
        CSharp: secondbestRun
        VB: secondbestRun
      nameWithType:
        CSharp: ScoresTexts.secondbestRun
        VB: ScoresTexts.secondbestRun
      qualifiedName:
        CSharp: UserInterface.ScoresTexts.secondbestRun
        VB: UserInterface.ScoresTexts.secondbestRun
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: secondbestRun
        path: ''
        startLine: 243
      syntax:
        content:
          CSharp: public TextMeshProUGUI secondbestRun
          VB: Public secondbestRun As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: UserInterface.ScoresTexts.thirdbestRun
      commentId: F:UserInterface.ScoresTexts.thirdbestRun
      language: CSharp
      name:
        CSharp: thirdbestRun
        VB: thirdbestRun
      nameWithType:
        CSharp: ScoresTexts.thirdbestRun
        VB: ScoresTexts.thirdbestRun
      qualifiedName:
        CSharp: UserInterface.ScoresTexts.thirdbestRun
        VB: UserInterface.ScoresTexts.thirdbestRun
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: UserInterface
      source:
        id: thirdbestRun
        path: ''
        startLine: 244
      syntax:
        content:
          CSharp: public TextMeshProUGUI thirdbestRun
          VB: Public thirdbestRun As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Health
  commentId: N:Health
  language: CSharp
  name:
    CSharp: Health
    VB: Health
  nameWithType:
    CSharp: Health
    VB: Health
  qualifiedName:
    CSharp: Health
    VB: Health
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Health.HealthPackage
    commentId: T:Health.HealthPackage
    language: CSharp
    name:
      CSharp: HealthPackage
      VB: HealthPackage
    nameWithType:
      CSharp: HealthPackage
      VB: HealthPackage
    qualifiedName:
      CSharp: Health.HealthPackage
      VB: Health.HealthPackage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Health
    source:
      id: HealthPackage
      path: ''
      startLine: 256
    summary: "\nHealthPackage behaviour\n"
    example: []
    syntax:
      content:
        CSharp: 'public class HealthPackage : MonoBehaviour'
        VB: >-
          Public Class HealthPackage

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Health.Health
    commentId: T:Health.Health
    language: CSharp
    name:
      CSharp: Health
      VB: Health
    nameWithType:
      CSharp: Health
      VB: Health
    qualifiedName:
      CSharp: Health.Health
      VB: Health.Health
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Health
    source:
      id: Health
      path: ''
      startLine: 314
    syntax:
      content:
        CSharp: 'public class Health : MonoBehaviour'
        VB: >-
          Public Class Health

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Health.Health.isInvincible
      commentId: F:Health.Health.isInvincible
      language: CSharp
      name:
        CSharp: isInvincible
        VB: isInvincible
      nameWithType:
        CSharp: Health.isInvincible
        VB: Health.isInvincible
      qualifiedName:
        CSharp: Health.Health.isInvincible
        VB: Health.Health.isInvincible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Health
      source:
        id: isInvincible
        path: ''
        startLine: 318
      syntax:
        content:
          CSharp: public bool isInvincible
          VB: Public isInvincible As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Health.Health.CurrentHealth
      commentId: P:Health.Health.CurrentHealth
      language: CSharp
      name:
        CSharp: CurrentHealth
        VB: CurrentHealth
      nameWithType:
        CSharp: Health.CurrentHealth
        VB: Health.CurrentHealth
      qualifiedName:
        CSharp: Health.Health.CurrentHealth
        VB: Health.Health.CurrentHealth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Health
      source:
        id: CurrentHealth
        path: ''
        startLine: 322
      syntax:
        content:
          CSharp: public int CurrentHealth { get; }
          VB: Public ReadOnly Property CurrentHealth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Health.Health.CurrentHealth*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Health.Health.GetDamagedOverTime(System.Int32,System.Single)
      commentId: M:Health.Health.GetDamagedOverTime(System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: GetDamagedOverTime(Int32, Single)
        VB: GetDamagedOverTime(Int32, Single)
      nameWithType:
        CSharp: Health.GetDamagedOverTime(Int32, Single)
        VB: Health.GetDamagedOverTime(Int32, Single)
      qualifiedName:
        CSharp: Health.Health.GetDamagedOverTime(System.Int32, System.Single)
        VB: Health.Health.GetDamagedOverTime(System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Health
      source:
        id: GetDamagedOverTime
        path: ''
        startLine: 399
      syntax:
        content:
          CSharp: public void GetDamagedOverTime(int value, float time)
          VB: Public Sub GetDamagedOverTime(value As Integer, time As Single)
        parameters:
        - id: value
          type: System.Int32
        - id: time
          type: System.Single
      overload: Health.Health.GetDamagedOverTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Health.Health.IncreaseHealth(System.Int32)
      commentId: M:Health.Health.IncreaseHealth(System.Int32)
      language: CSharp
      name:
        CSharp: IncreaseHealth(Int32)
        VB: IncreaseHealth(Int32)
      nameWithType:
        CSharp: Health.IncreaseHealth(Int32)
        VB: Health.IncreaseHealth(Int32)
      qualifiedName:
        CSharp: Health.Health.IncreaseHealth(System.Int32)
        VB: Health.Health.IncreaseHealth(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Health
      source:
        id: IncreaseHealth
        path: ''
        startLine: 429
      summary: "\nincreasing the currentHealth by value\n"
      example: []
      syntax:
        content:
          CSharp: public void IncreaseHealth(int value)
          VB: Public Sub IncreaseHealth(value As Integer)
        parameters:
        - id: value
          type: System.Int32
          description: ''
      overload: Health.Health.IncreaseHealth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Health.Health.ResetHealth
      commentId: M:Health.Health.ResetHealth
      language: CSharp
      name:
        CSharp: ResetHealth()
        VB: ResetHealth()
      nameWithType:
        CSharp: Health.ResetHealth()
        VB: Health.ResetHealth()
      qualifiedName:
        CSharp: Health.Health.ResetHealth()
        VB: Health.Health.ResetHealth()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Health
      source:
        id: ResetHealth
        path: ''
        startLine: 435
      syntax:
        content:
          CSharp: public void ResetHealth()
          VB: Public Sub ResetHealth
      overload: Health.Health.ResetHealth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CustomUtils
  commentId: N:CustomUtils
  language: CSharp
  name:
    CSharp: CustomUtils
    VB: CustomUtils
  nameWithType:
    CSharp: CustomUtils
    VB: CustomUtils
  qualifiedName:
    CSharp: CustomUtils
    VB: CustomUtils
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CustomUtils.ReferenceTable
    commentId: T:CustomUtils.ReferenceTable
    language: CSharp
    name:
      CSharp: ReferenceTable
      VB: ReferenceTable
    nameWithType:
      CSharp: ReferenceTable
      VB: ReferenceTable
    qualifiedName:
      CSharp: CustomUtils.ReferenceTable
      VB: CustomUtils.ReferenceTable
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: ReferenceTable
      path: ''
      startLine: 491
    summary: "\nstatic class holding references for Player, CurrentEnemy, GameManager and DragonSpawnManager\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ReferenceTable : MonoBehaviour'
        VB: >-
          Public Class ReferenceTable

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CustomUtils.ReferenceTable.DragonSpawner
      commentId: F:CustomUtils.ReferenceTable.DragonSpawner
      language: CSharp
      name:
        CSharp: DragonSpawner
        VB: DragonSpawner
      nameWithType:
        CSharp: ReferenceTable.DragonSpawner
        VB: ReferenceTable.DragonSpawner
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.DragonSpawner
        VB: CustomUtils.ReferenceTable.DragonSpawner
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: DragonSpawner
        path: ''
        startLine: 494
      syntax:
        content:
          CSharp: public static DragonSpawnManager DragonSpawner
          VB: Public Shared DragonSpawner As DragonSpawnManager
        return:
          type: DragonSpawnManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.ReferenceTable.GameManager
      commentId: F:CustomUtils.ReferenceTable.GameManager
      language: CSharp
      name:
        CSharp: GameManager
        VB: GameManager
      nameWithType:
        CSharp: ReferenceTable.GameManager
        VB: ReferenceTable.GameManager
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.GameManager
        VB: CustomUtils.ReferenceTable.GameManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: GameManager
        path: ''
        startLine: 495
      syntax:
        content:
          CSharp: public static GameManager GameManager
          VB: Public Shared GameManager As GameManager
        return:
          type: CustomUtils.GameManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.ReferenceTable.Player
      commentId: F:CustomUtils.ReferenceTable.Player
      language: CSharp
      name:
        CSharp: Player
        VB: Player
      nameWithType:
        CSharp: ReferenceTable.Player
        VB: ReferenceTable.Player
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.Player
        VB: CustomUtils.ReferenceTable.Player
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Player
        path: ''
        startLine: 496
      syntax:
        content:
          CSharp: public static GameObject Player
          VB: Public Shared Player As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.ReferenceTable.CurrentEnemy
      commentId: F:CustomUtils.ReferenceTable.CurrentEnemy
      language: CSharp
      name:
        CSharp: CurrentEnemy
        VB: CurrentEnemy
      nameWithType:
        CSharp: ReferenceTable.CurrentEnemy
        VB: ReferenceTable.CurrentEnemy
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.CurrentEnemy
        VB: CustomUtils.ReferenceTable.CurrentEnemy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: CurrentEnemy
        path: ''
        startLine: 497
      syntax:
        content:
          CSharp: public static GameObject CurrentEnemy
          VB: Public Shared CurrentEnemy As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.ReferenceTable.LookAtEnemy
      commentId: F:CustomUtils.ReferenceTable.LookAtEnemy
      language: CSharp
      name:
        CSharp: LookAtEnemy
        VB: LookAtEnemy
      nameWithType:
        CSharp: ReferenceTable.LookAtEnemy
        VB: ReferenceTable.LookAtEnemy
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.LookAtEnemy
        VB: CustomUtils.ReferenceTable.LookAtEnemy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: LookAtEnemy
        path: ''
        startLine: 499
      syntax:
        content:
          CSharp: public static Transform LookAtEnemy
          VB: Public Shared LookAtEnemy As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.ReferenceTable.SetCurrentEnemy(GameObject)
      commentId: M:CustomUtils.ReferenceTable.SetCurrentEnemy(GameObject)
      language: CSharp
      name:
        CSharp: SetCurrentEnemy(GameObject)
        VB: SetCurrentEnemy(GameObject)
      nameWithType:
        CSharp: ReferenceTable.SetCurrentEnemy(GameObject)
        VB: ReferenceTable.SetCurrentEnemy(GameObject)
      qualifiedName:
        CSharp: CustomUtils.ReferenceTable.SetCurrentEnemy(GameObject)
        VB: CustomUtils.ReferenceTable.SetCurrentEnemy(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SetCurrentEnemy
        path: ''
        startLine: 509
      summary: "\ngiven a GameObject updating the references CurrentEnemy and LookAtEnemy\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetCurrentEnemy(GameObject enemy)
          VB: Public Shared Sub SetCurrentEnemy(enemy As GameObject)
        parameters:
        - id: enemy
          type: GameObject
          description: ''
      overload: CustomUtils.ReferenceTable.SetCurrentEnemy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CustomUtils.SceneManager
    commentId: T:CustomUtils.SceneManager
    language: CSharp
    name:
      CSharp: SceneManager
      VB: SceneManager
    nameWithType:
      CSharp: SceneManager
      VB: SceneManager
    qualifiedName:
      CSharp: CustomUtils.SceneManager
      VB: CustomUtils.SceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: SceneManager
      path: ''
      startLine: 533
    summary: "\nScene Loading Manager\n"
    example: []
    syntax:
      content:
        CSharp: public static class SceneManager
        VB: Public Module SceneManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: CustomUtils.SceneManager.CurrentScene
      commentId: F:CustomUtils.SceneManager.CurrentScene
      language: CSharp
      name:
        CSharp: CurrentScene
        VB: CurrentScene
      nameWithType:
        CSharp: SceneManager.CurrentScene
        VB: SceneManager.CurrentScene
      qualifiedName:
        CSharp: CustomUtils.SceneManager.CurrentScene
        VB: CustomUtils.SceneManager.CurrentScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: CurrentScene
        path: ''
        startLine: 534
      syntax:
        content:
          CSharp: public static Scene CurrentScene
          VB: Public Shared CurrentScene As Scene
        return:
          type: Scene
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CustomUtils.SceneManager.LoadScene(System.String)
      commentId: M:CustomUtils.SceneManager.LoadScene(System.String)
      language: CSharp
      name:
        CSharp: LoadScene(String)
        VB: LoadScene(String)
      nameWithType:
        CSharp: SceneManager.LoadScene(String)
        VB: SceneManager.LoadScene(String)
      qualifiedName:
        CSharp: CustomUtils.SceneManager.LoadScene(System.String)
        VB: CustomUtils.SceneManager.LoadScene(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: LoadScene
        path: ''
        startLine: 540
      summary: "\nLoading the scene by string\nsetting Reference\n"
      example: []
      syntax:
        content:
          CSharp: public static void LoadScene(string sceneName)
          VB: Public Shared Sub LoadScene(sceneName As String)
        parameters:
        - id: sceneName
          type: System.String
          description: the scene to be loaded
      overload: CustomUtils.SceneManager.LoadScene*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CustomUtils.ScoreSystem
    commentId: T:CustomUtils.ScoreSystem
    language: CSharp
    name:
      CSharp: ScoreSystem
      VB: ScoreSystem
    nameWithType:
      CSharp: ScoreSystem
      VB: ScoreSystem
    qualifiedName:
      CSharp: CustomUtils.ScoreSystem
      VB: CustomUtils.ScoreSystem
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: ScoreSystem
      path: ''
      startLine: 550
    syntax:
      content:
        CSharp: 'public class ScoreSystem : IComparable<ScoreSystem>'
        VB: >-
          Public Class ScoreSystem

              Inherits IComparable(Of ScoreSystem)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CustomUtils.ScoreSystem.CurrentScore
      commentId: F:CustomUtils.ScoreSystem.CurrentScore
      language: CSharp
      name:
        CSharp: CurrentScore
        VB: CurrentScore
      nameWithType:
        CSharp: ScoreSystem.CurrentScore
        VB: ScoreSystem.CurrentScore
      qualifiedName:
        CSharp: CustomUtils.ScoreSystem.CurrentScore
        VB: CustomUtils.ScoreSystem.CurrentScore
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: CurrentScore
        path: ''
        startLine: 551
      syntax:
        content:
          CSharp: public int CurrentScore
          VB: Public CurrentScore As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.ScoreSystem.#ctor
      commentId: M:CustomUtils.ScoreSystem.#ctor
      language: CSharp
      name:
        CSharp: ScoreSystem()
        VB: ScoreSystem()
      nameWithType:
        CSharp: ScoreSystem.ScoreSystem()
        VB: ScoreSystem.ScoreSystem()
      qualifiedName:
        CSharp: CustomUtils.ScoreSystem.ScoreSystem()
        VB: CustomUtils.ScoreSystem.ScoreSystem()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: .ctor
        path: ''
        startLine: 553
      syntax:
        content:
          CSharp: public ScoreSystem()
          VB: Public Sub New
      overload: CustomUtils.ScoreSystem.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.ScoreSystem.IncreaseScore(System.Int32)
      commentId: M:CustomUtils.ScoreSystem.IncreaseScore(System.Int32)
      language: CSharp
      name:
        CSharp: IncreaseScore(Int32)
        VB: IncreaseScore(Int32)
      nameWithType:
        CSharp: ScoreSystem.IncreaseScore(Int32)
        VB: ScoreSystem.IncreaseScore(Int32)
      qualifiedName:
        CSharp: CustomUtils.ScoreSystem.IncreaseScore(System.Int32)
        VB: CustomUtils.ScoreSystem.IncreaseScore(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: IncreaseScore
        path: ''
        startLine: 557
      syntax:
        content:
          CSharp: public void IncreaseScore(int amount)
          VB: Public Sub IncreaseScore(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
      overload: CustomUtils.ScoreSystem.IncreaseScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.ScoreSystem.GetScore
      commentId: M:CustomUtils.ScoreSystem.GetScore
      language: CSharp
      name:
        CSharp: GetScore()
        VB: GetScore()
      nameWithType:
        CSharp: ScoreSystem.GetScore()
        VB: ScoreSystem.GetScore()
      qualifiedName:
        CSharp: CustomUtils.ScoreSystem.GetScore()
        VB: CustomUtils.ScoreSystem.GetScore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: GetScore
        path: ''
        startLine: 561
      syntax:
        content:
          CSharp: public int GetScore()
          VB: Public Function GetScore As Integer
        return:
          type: System.Int32
      overload: CustomUtils.ScoreSystem.GetScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.ScoreSystem.CompareTo(CustomUtils.ScoreSystem)
      commentId: M:CustomUtils.ScoreSystem.CompareTo(CustomUtils.ScoreSystem)
      language: CSharp
      name:
        CSharp: CompareTo(ScoreSystem)
        VB: CompareTo(ScoreSystem)
      nameWithType:
        CSharp: ScoreSystem.CompareTo(ScoreSystem)
        VB: ScoreSystem.CompareTo(ScoreSystem)
      qualifiedName:
        CSharp: CustomUtils.ScoreSystem.CompareTo(CustomUtils.ScoreSystem)
        VB: CustomUtils.ScoreSystem.CompareTo(CustomUtils.ScoreSystem)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: CompareTo
        path: ''
        startLine: 574
      summary: "\nimplementation of IComparable CompareTo()\ncomparing this to other\nif other is greater than this, the spot in array will be replaced by other\n"
      example: []
      syntax:
        content:
          CSharp: public int CompareTo(ScoreSystem other)
          VB: Public Function CompareTo(other As ScoreSystem) As Integer
        parameters:
        - id: other
          type: CustomUtils.ScoreSystem
          description: the ScoreSystem to be compared to
        return:
          type: System.Int32
          description: "\n0: the CurrentScores are the same\n1: the CurrentScore of other is less than this or null - resulting in higher index\n-1: the CurrentScore of other is higher than this - resulting in lower index\n"
      overload: CustomUtils.ScoreSystem.CompareTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CustomUtils.FightTimer
    commentId: T:CustomUtils.FightTimer
    language: CSharp
    name:
      CSharp: FightTimer
      VB: FightTimer
    nameWithType:
      CSharp: FightTimer
      VB: FightTimer
    qualifiedName:
      CSharp: CustomUtils.FightTimer
      VB: CustomUtils.FightTimer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: FightTimer
      path: ''
      startLine: 588
    summary: "\ntimer functionality for GameLoop\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FightTimer : MonoBehaviour'
        VB: >-
          Public Class FightTimer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CustomUtils.FightTimer.maxTimerRef
      commentId: F:CustomUtils.FightTimer.maxTimerRef
      language: CSharp
      name:
        CSharp: maxTimerRef
        VB: maxTimerRef
      nameWithType:
        CSharp: FightTimer.maxTimerRef
        VB: FightTimer.maxTimerRef
      qualifiedName:
        CSharp: CustomUtils.FightTimer.maxTimerRef
        VB: CustomUtils.FightTimer.maxTimerRef
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: maxTimerRef
        path: ''
        startLine: 589
      syntax:
        content:
          CSharp: public double maxTimerRef
          VB: Public maxTimerRef As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.maxTimer
      commentId: F:CustomUtils.FightTimer.maxTimer
      language: CSharp
      name:
        CSharp: maxTimer
        VB: maxTimer
      nameWithType:
        CSharp: FightTimer.maxTimer
        VB: FightTimer.maxTimer
      qualifiedName:
        CSharp: CustomUtils.FightTimer.maxTimer
        VB: CustomUtils.FightTimer.maxTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: maxTimer
        path: ''
        startLine: 590
      syntax:
        content:
          CSharp: public double maxTimer
          VB: Public maxTimer As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.fightTimerRef
      commentId: F:CustomUtils.FightTimer.fightTimerRef
      language: CSharp
      name:
        CSharp: fightTimerRef
        VB: fightTimerRef
      nameWithType:
        CSharp: FightTimer.fightTimerRef
        VB: FightTimer.fightTimerRef
      qualifiedName:
        CSharp: CustomUtils.FightTimer.fightTimerRef
        VB: CustomUtils.FightTimer.fightTimerRef
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: fightTimerRef
        path: ''
        startLine: 591
      syntax:
        content:
          CSharp: public double fightTimerRef
          VB: Public fightTimerRef As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.fightTimer
      commentId: F:CustomUtils.FightTimer.fightTimer
      language: CSharp
      name:
        CSharp: fightTimer
        VB: fightTimer
      nameWithType:
        CSharp: FightTimer.fightTimer
        VB: FightTimer.fightTimer
      qualifiedName:
        CSharp: CustomUtils.FightTimer.fightTimer
        VB: CustomUtils.FightTimer.fightTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: fightTimer
        path: ''
        startLine: 592
      syntax:
        content:
          CSharp: public double fightTimer
          VB: Public fightTimer As Double
        return:
          type: System.Double
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.fightTimerText
      commentId: F:CustomUtils.FightTimer.fightTimerText
      language: CSharp
      name:
        CSharp: fightTimerText
        VB: fightTimerText
      nameWithType:
        CSharp: FightTimer.fightTimerText
        VB: FightTimer.fightTimerText
      qualifiedName:
        CSharp: CustomUtils.FightTimer.fightTimerText
        VB: CustomUtils.FightTimer.fightTimerText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: fightTimerText
        path: ''
        startLine: 593
      syntax:
        content:
          CSharp: public TextMeshProUGUI fightTimerText
          VB: Public fightTimerText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.maxTimerText
      commentId: F:CustomUtils.FightTimer.maxTimerText
      language: CSharp
      name:
        CSharp: maxTimerText
        VB: maxTimerText
      nameWithType:
        CSharp: FightTimer.maxTimerText
        VB: FightTimer.maxTimerText
      qualifiedName:
        CSharp: CustomUtils.FightTimer.maxTimerText
        VB: CustomUtils.FightTimer.maxTimerText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: maxTimerText
        path: ''
        startLine: 594
      syntax:
        content:
          CSharp: public TextMeshProUGUI maxTimerText
          VB: Public maxTimerText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.Reset
      commentId: M:CustomUtils.FightTimer.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: FightTimer.Reset()
        VB: FightTimer.Reset()
      qualifiedName:
        CSharp: CustomUtils.FightTimer.Reset()
        VB: CustomUtils.FightTimer.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Reset
        path: ''
        startLine: 603
      summary: "\nresets maxTimer and fightTimer back to their referenced values\n"
      example: []
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: CustomUtils.FightTimer.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.OnFight
      commentId: M:CustomUtils.FightTimer.OnFight
      language: CSharp
      name:
        CSharp: OnFight()
        VB: OnFight()
      nameWithType:
        CSharp: FightTimer.OnFight()
        VB: FightTimer.OnFight()
      qualifiedName:
        CSharp: CustomUtils.FightTimer.OnFight()
        VB: CustomUtils.FightTimer.OnFight()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: OnFight
        path: ''
        startLine: 610
      summary: "\nsetting the maxTimerText in the UI and Starting the Fighting Countdown\n"
      example: []
      syntax:
        content:
          CSharp: public void OnFight()
          VB: Public Sub OnFight
      overload: CustomUtils.FightTimer.OnFight*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.FightTimer.OnPause
      commentId: M:CustomUtils.FightTimer.OnPause
      language: CSharp
      name:
        CSharp: OnPause()
        VB: OnPause()
      nameWithType:
        CSharp: FightTimer.OnPause()
        VB: FightTimer.OnPause()
      qualifiedName:
        CSharp: CustomUtils.FightTimer.OnPause()
        VB: CustomUtils.FightTimer.OnPause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: OnPause
        path: ''
        startLine: 618
      summary: "\nStopping the Fighting Countdown\n"
      example: []
      syntax:
        content:
          CSharp: public void OnPause()
          VB: Public Sub OnPause
      overload: CustomUtils.FightTimer.OnPause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CustomUtils.SaveAndRestoreScoreList
    commentId: T:CustomUtils.SaveAndRestoreScoreList
    language: CSharp
    name:
      CSharp: SaveAndRestoreScoreList
      VB: SaveAndRestoreScoreList
    nameWithType:
      CSharp: SaveAndRestoreScoreList
      VB: SaveAndRestoreScoreList
    qualifiedName:
      CSharp: CustomUtils.SaveAndRestoreScoreList
      VB: CustomUtils.SaveAndRestoreScoreList
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: SaveAndRestoreScoreList
      path: ''
      startLine: 657
    summary: "\nSerializing and Deserializing ScoreSystem to JSON\n"
    example: []
    syntax:
      content:
        CSharp: public class SaveAndRestoreScoreList
        VB: Public Class SaveAndRestoreScoreList
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CustomUtils.SaveAndRestoreScoreList.ScoreList
      commentId: F:CustomUtils.SaveAndRestoreScoreList.ScoreList
      language: CSharp
      name:
        CSharp: ScoreList
        VB: ScoreList
      nameWithType:
        CSharp: SaveAndRestoreScoreList.ScoreList
        VB: SaveAndRestoreScoreList.ScoreList
      qualifiedName:
        CSharp: CustomUtils.SaveAndRestoreScoreList.ScoreList
        VB: CustomUtils.SaveAndRestoreScoreList.ScoreList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: ScoreList
        path: ''
        startLine: 658
      syntax:
        content:
          CSharp: public ScoreSystem[] ScoreList
          VB: Public ScoreList As ScoreSystem()
        return:
          type: CustomUtils.ScoreSystem[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.SaveAndRestoreScoreList.#ctor
      commentId: M:CustomUtils.SaveAndRestoreScoreList.#ctor
      language: CSharp
      name:
        CSharp: SaveAndRestoreScoreList()
        VB: SaveAndRestoreScoreList()
      nameWithType:
        CSharp: SaveAndRestoreScoreList.SaveAndRestoreScoreList()
        VB: SaveAndRestoreScoreList.SaveAndRestoreScoreList()
      qualifiedName:
        CSharp: CustomUtils.SaveAndRestoreScoreList.SaveAndRestoreScoreList()
        VB: CustomUtils.SaveAndRestoreScoreList.SaveAndRestoreScoreList()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: .ctor
        path: ''
        startLine: 666
      summary: "\nConstructor -> instantiating the scoreList\n"
      example: []
      syntax:
        content:
          CSharp: public SaveAndRestoreScoreList()
          VB: Public Sub New
      overload: CustomUtils.SaveAndRestoreScoreList.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.SaveAndRestoreScoreList.SaveScore(CustomUtils.ScoreSystem)
      commentId: M:CustomUtils.SaveAndRestoreScoreList.SaveScore(CustomUtils.ScoreSystem)
      language: CSharp
      name:
        CSharp: SaveScore(ScoreSystem)
        VB: SaveScore(ScoreSystem)
      nameWithType:
        CSharp: SaveAndRestoreScoreList.SaveScore(ScoreSystem)
        VB: SaveAndRestoreScoreList.SaveScore(ScoreSystem)
      qualifiedName:
        CSharp: CustomUtils.SaveAndRestoreScoreList.SaveScore(CustomUtils.ScoreSystem)
        VB: CustomUtils.SaveAndRestoreScoreList.SaveScore(CustomUtils.ScoreSystem)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SaveScore
        path: ''
        startLine: 676
      summary: "\nloading the Score\nUpdating the score if the input parameter is higher than an old value\nWriting the new ScoreSystem[] to the file\n"
      example: []
      syntax:
        content:
          CSharp: public void SaveScore(ScoreSystem newScore)
          VB: Public Sub SaveScore(newScore As ScoreSystem)
        parameters:
        - id: newScore
          type: CustomUtils.ScoreSystem
          description: score the player accomplished
      overload: CustomUtils.SaveAndRestoreScoreList.SaveScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CustomUtils.GameManager
    commentId: T:CustomUtils.GameManager
    language: CSharp
    name:
      CSharp: GameManager
      VB: GameManager
    nameWithType:
      CSharp: GameManager
      VB: GameManager
    qualifiedName:
      CSharp: CustomUtils.GameManager
      VB: CustomUtils.GameManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: GameManager
      path: ''
      startLine: 732
    summary: "\nbase class for GameLoop behaviours \n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameManager : MonoBehaviour'
        VB: >-
          Public Class GameManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CustomUtils.GameManager.optionsMenu
      commentId: F:CustomUtils.GameManager.optionsMenu
      language: CSharp
      name:
        CSharp: optionsMenu
        VB: optionsMenu
      nameWithType:
        CSharp: GameManager.optionsMenu
        VB: GameManager.optionsMenu
      qualifiedName:
        CSharp: CustomUtils.GameManager.optionsMenu
        VB: CustomUtils.GameManager.optionsMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: optionsMenu
        path: ''
        startLine: 748
      syntax:
        content:
          CSharp: public GameObject optionsMenu
          VB: Public optionsMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.pauseMenu
      commentId: F:CustomUtils.GameManager.pauseMenu
      language: CSharp
      name:
        CSharp: pauseMenu
        VB: pauseMenu
      nameWithType:
        CSharp: GameManager.pauseMenu
        VB: GameManager.pauseMenu
      qualifiedName:
        CSharp: CustomUtils.GameManager.pauseMenu
        VB: CustomUtils.GameManager.pauseMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: pauseMenu
        path: ''
        startLine: 749
      syntax:
        content:
          CSharp: public GameObject pauseMenu
          VB: Public pauseMenu As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.gameModeChoose
      commentId: F:CustomUtils.GameManager.gameModeChoose
      language: CSharp
      name:
        CSharp: gameModeChoose
        VB: gameModeChoose
      nameWithType:
        CSharp: GameManager.gameModeChoose
        VB: GameManager.gameModeChoose
      qualifiedName:
        CSharp: CustomUtils.GameManager.gameModeChoose
        VB: CustomUtils.GameManager.gameModeChoose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: gameModeChoose
        path: ''
        startLine: 750
      syntax:
        content:
          CSharp: public GameObject gameModeChoose
          VB: Public gameModeChoose As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.tutorialWinScreen
      commentId: F:CustomUtils.GameManager.tutorialWinScreen
      language: CSharp
      name:
        CSharp: tutorialWinScreen
        VB: tutorialWinScreen
      nameWithType:
        CSharp: GameManager.tutorialWinScreen
        VB: GameManager.tutorialWinScreen
      qualifiedName:
        CSharp: CustomUtils.GameManager.tutorialWinScreen
        VB: CustomUtils.GameManager.tutorialWinScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: tutorialWinScreen
        path: ''
        startLine: 751
      syntax:
        content:
          CSharp: public GameObject tutorialWinScreen
          VB: Public tutorialWinScreen As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.fightTimer
      commentId: F:CustomUtils.GameManager.fightTimer
      language: CSharp
      name:
        CSharp: fightTimer
        VB: fightTimer
      nameWithType:
        CSharp: GameManager.fightTimer
        VB: GameManager.fightTimer
      qualifiedName:
        CSharp: CustomUtils.GameManager.fightTimer
        VB: CustomUtils.GameManager.fightTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: fightTimer
        path: ''
        startLine: 752
      syntax:
        content:
          CSharp: public FightTimer fightTimer
          VB: Public fightTimer As FightTimer
        return:
          type: CustomUtils.FightTimer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.playerDefeated
      commentId: F:CustomUtils.GameManager.playerDefeated
      language: CSharp
      name:
        CSharp: playerDefeated
        VB: playerDefeated
      nameWithType:
        CSharp: GameManager.playerDefeated
        VB: GameManager.playerDefeated
      qualifiedName:
        CSharp: CustomUtils.GameManager.playerDefeated
        VB: CustomUtils.GameManager.playerDefeated
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: playerDefeated
        path: ''
        startLine: 753
      syntax:
        content:
          CSharp: public GameObject playerDefeated
          VB: Public playerDefeated As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.scoreText
      commentId: F:CustomUtils.GameManager.scoreText
      language: CSharp
      name:
        CSharp: scoreText
        VB: scoreText
      nameWithType:
        CSharp: GameManager.scoreText
        VB: GameManager.scoreText
      qualifiedName:
        CSharp: CustomUtils.GameManager.scoreText
        VB: CustomUtils.GameManager.scoreText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: scoreText
        path: ''
        startLine: 754
      syntax:
        content:
          CSharp: public TextMeshProUGUI scoreText
          VB: Public scoreText As TextMeshProUGUI
        return:
          type: TextMeshProUGUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.switcher
      commentId: F:CustomUtils.GameManager.switcher
      language: CSharp
      name:
        CSharp: switcher
        VB: switcher
      nameWithType:
        CSharp: GameManager.switcher
        VB: GameManager.switcher
      qualifiedName:
        CSharp: CustomUtils.GameManager.switcher
        VB: CustomUtils.GameManager.switcher
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: switcher
        path: ''
        startLine: 756
      syntax:
        content:
          CSharp: public CineMachineSwitcher switcher
          VB: Public switcher As CineMachineSwitcher
        return:
          type: CineMachineSwitcher
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.currentEnemyIdx
      commentId: F:CustomUtils.GameManager.currentEnemyIdx
      language: CSharp
      name:
        CSharp: currentEnemyIdx
        VB: currentEnemyIdx
      nameWithType:
        CSharp: GameManager.currentEnemyIdx
        VB: GameManager.currentEnemyIdx
      qualifiedName:
        CSharp: CustomUtils.GameManager.currentEnemyIdx
        VB: CustomUtils.GameManager.currentEnemyIdx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: currentEnemyIdx
        path: ''
        startLine: 762
      syntax:
        content:
          CSharp: public int currentEnemyIdx
          VB: Public currentEnemyIdx As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.SetState(CustomUtils.GameManager.GameState)
      commentId: M:CustomUtils.GameManager.SetState(CustomUtils.GameManager.GameState)
      language: CSharp
      name:
        CSharp: SetState(GameManager.GameState)
        VB: SetState(GameManager.GameState)
      nameWithType:
        CSharp: GameManager.SetState(GameManager.GameState)
        VB: GameManager.SetState(GameManager.GameState)
      qualifiedName:
        CSharp: CustomUtils.GameManager.SetState(CustomUtils.GameManager.GameState)
        VB: CustomUtils.GameManager.SetState(CustomUtils.GameManager.GameState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SetState
        path: ''
        startLine: 795
      summary: "\nsetting the _currentState to newState\nswitching States accordingly\n"
      example: []
      syntax:
        content:
          CSharp: public void SetState(GameManager.GameState newState)
          VB: Public Sub SetState(newState As GameManager.GameState)
        parameters:
        - id: newState
          type: CustomUtils.GameManager.GameState
          description: new State to be set
      overload: CustomUtils.GameManager.SetState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.EnableGameModeUI
      commentId: M:CustomUtils.GameManager.EnableGameModeUI
      language: CSharp
      name:
        CSharp: EnableGameModeUI()
        VB: EnableGameModeUI()
      nameWithType:
        CSharp: GameManager.EnableGameModeUI()
        VB: GameManager.EnableGameModeUI()
      qualifiedName:
        CSharp: CustomUtils.GameManager.EnableGameModeUI()
        VB: CustomUtils.GameManager.EnableGameModeUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: EnableGameModeUI
        path: ''
        startLine: 953
      syntax:
        content:
          CSharp: public void EnableGameModeUI()
          VB: Public Sub EnableGameModeUI
      overload: CustomUtils.GameManager.EnableGameModeUI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.SetGameMode(CustomUtils.GameManager.GameMode)
      commentId: M:CustomUtils.GameManager.SetGameMode(CustomUtils.GameManager.GameMode)
      language: CSharp
      name:
        CSharp: SetGameMode(GameManager.GameMode)
        VB: SetGameMode(GameManager.GameMode)
      nameWithType:
        CSharp: GameManager.SetGameMode(GameManager.GameMode)
        VB: GameManager.SetGameMode(GameManager.GameMode)
      qualifiedName:
        CSharp: CustomUtils.GameManager.SetGameMode(CustomUtils.GameManager.GameMode)
        VB: CustomUtils.GameManager.SetGameMode(CustomUtils.GameManager.GameMode)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SetGameMode
        path: ''
        startLine: 962
      summary: "\nsetting the _gameMode reference\nswitching the State to CutScene\n"
      example: []
      syntax:
        content:
          CSharp: public void SetGameMode(GameManager.GameMode setGameMode)
          VB: Public Sub SetGameMode(setGameMode As GameManager.GameMode)
        parameters:
        - id: setGameMode
          type: CustomUtils.GameManager.GameMode
          description: the chosen GameMode
      overload: CustomUtils.GameManager.SetGameMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.UpdateScore
      commentId: M:CustomUtils.GameManager.UpdateScore
      language: CSharp
      name:
        CSharp: UpdateScore()
        VB: UpdateScore()
      nameWithType:
        CSharp: GameManager.UpdateScore()
        VB: GameManager.UpdateScore()
      qualifiedName:
        CSharp: CustomUtils.GameManager.UpdateScore()
        VB: CustomUtils.GameManager.UpdateScore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: UpdateScore
        path: ''
        startLine: 967
      syntax:
        content:
          CSharp: public void UpdateScore()
          VB: Public Sub UpdateScore
      overload: CustomUtils.GameManager.UpdateScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.SetTutorialDone
      commentId: M:CustomUtils.GameManager.SetTutorialDone
      language: CSharp
      name:
        CSharp: SetTutorialDone()
        VB: SetTutorialDone()
      nameWithType:
        CSharp: GameManager.SetTutorialDone()
        VB: GameManager.SetTutorialDone()
      qualifiedName:
        CSharp: CustomUtils.GameManager.SetTutorialDone()
        VB: CustomUtils.GameManager.SetTutorialDone()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SetTutorialDone
        path: ''
        startLine: 976
      summary: "\nenabling the tutorialDone Canvas\npausing the fightTimer\n"
      example: []
      syntax:
        content:
          CSharp: public void SetTutorialDone()
          VB: Public Sub SetTutorialDone
      overload: CustomUtils.GameManager.SetTutorialDone*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.EnableOptionsMenu
      commentId: M:CustomUtils.GameManager.EnableOptionsMenu
      language: CSharp
      name:
        CSharp: EnableOptionsMenu()
        VB: EnableOptionsMenu()
      nameWithType:
        CSharp: GameManager.EnableOptionsMenu()
        VB: GameManager.EnableOptionsMenu()
      qualifiedName:
        CSharp: CustomUtils.GameManager.EnableOptionsMenu()
        VB: CustomUtils.GameManager.EnableOptionsMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: EnableOptionsMenu
        path: ''
        startLine: 986
      summary: "\nsetting the cursor visible\nenabling the OptionsMenu\n"
      example: []
      syntax:
        content:
          CSharp: public void EnableOptionsMenu()
          VB: Public Sub EnableOptionsMenu
      overload: CustomUtils.GameManager.EnableOptionsMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.DisableOptionsMenu
      commentId: M:CustomUtils.GameManager.DisableOptionsMenu
      language: CSharp
      name:
        CSharp: DisableOptionsMenu()
        VB: DisableOptionsMenu()
      nameWithType:
        CSharp: GameManager.DisableOptionsMenu()
        VB: GameManager.DisableOptionsMenu()
      qualifiedName:
        CSharp: CustomUtils.GameManager.DisableOptionsMenu()
        VB: CustomUtils.GameManager.DisableOptionsMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: DisableOptionsMenu
        path: ''
        startLine: 991
      syntax:
        content:
          CSharp: public void DisableOptionsMenu()
          VB: Public Sub DisableOptionsMenu
      overload: CustomUtils.GameManager.DisableOptionsMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CustomUtils.GameManager.DisableGameModeChoose
      commentId: M:CustomUtils.GameManager.DisableGameModeChoose
      language: CSharp
      name:
        CSharp: DisableGameModeChoose()
        VB: DisableGameModeChoose()
      nameWithType:
        CSharp: GameManager.DisableGameModeChoose()
        VB: GameManager.DisableGameModeChoose()
      qualifiedName:
        CSharp: CustomUtils.GameManager.DisableGameModeChoose()
        VB: CustomUtils.GameManager.DisableGameModeChoose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: DisableGameModeChoose
        path: ''
        startLine: 995
      syntax:
        content:
          CSharp: public void DisableGameModeChoose()
          VB: Public Sub DisableGameModeChoose
      overload: CustomUtils.GameManager.DisableGameModeChoose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CustomUtils.GameManager.GameMode
    commentId: T:CustomUtils.GameManager.GameMode
    language: CSharp
    name:
      CSharp: GameManager.GameMode
      VB: GameManager.GameMode
    nameWithType:
      CSharp: GameManager.GameMode
      VB: GameManager.GameMode
    qualifiedName:
      CSharp: CustomUtils.GameManager.GameMode
      VB: CustomUtils.GameManager.GameMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: GameMode
      path: ''
      startLine: 733
    syntax:
      content:
        CSharp: public enum GameMode
        VB: Public Enum GameMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CustomUtils.GameManager.GameMode.Tutorial
      commentId: F:CustomUtils.GameManager.GameMode.Tutorial
      language: CSharp
      name:
        CSharp: Tutorial
        VB: Tutorial
      nameWithType:
        CSharp: GameManager.GameMode.Tutorial
        VB: GameManager.GameMode.Tutorial
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameMode.Tutorial
        VB: CustomUtils.GameManager.GameMode.Tutorial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Tutorial
        path: ''
        startLine: 734
      syntax:
        content:
          CSharp: Tutorial = 0
          VB: Tutorial = 0
        return:
          type: CustomUtils.GameManager.GameMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameMode.Solo
      commentId: F:CustomUtils.GameManager.GameMode.Solo
      language: CSharp
      name:
        CSharp: Solo
        VB: Solo
      nameWithType:
        CSharp: GameManager.GameMode.Solo
        VB: GameManager.GameMode.Solo
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameMode.Solo
        VB: CustomUtils.GameManager.GameMode.Solo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Solo
        path: ''
        startLine: 735
      syntax:
        content:
          CSharp: Solo = 1
          VB: Solo = 1
        return:
          type: CustomUtils.GameManager.GameMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameMode.Random
      commentId: F:CustomUtils.GameManager.GameMode.Random
      language: CSharp
      name:
        CSharp: Random
        VB: Random
      nameWithType:
        CSharp: GameManager.GameMode.Random
        VB: GameManager.GameMode.Random
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameMode.Random
        VB: CustomUtils.GameManager.GameMode.Random
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Random
        path: ''
        startLine: 736
      syntax:
        content:
          CSharp: Random = 2
          VB: Random = 2
        return:
          type: CustomUtils.GameManager.GameMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CustomUtils.GameManager.GameState
    commentId: T:CustomUtils.GameManager.GameState
    language: CSharp
    name:
      CSharp: GameManager.GameState
      VB: GameManager.GameState
    nameWithType:
      CSharp: GameManager.GameState
      VB: GameManager.GameState
    qualifiedName:
      CSharp: CustomUtils.GameManager.GameState
      VB: CustomUtils.GameManager.GameState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: GameState
      path: ''
      startLine: 739
    syntax:
      content:
        CSharp: public enum GameState
        VB: Public Enum GameState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CustomUtils.GameManager.GameState.Start
      commentId: F:CustomUtils.GameManager.GameState.Start
      language: CSharp
      name:
        CSharp: Start
        VB: Start
      nameWithType:
        CSharp: GameManager.GameState.Start
        VB: GameManager.GameState.Start
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameState.Start
        VB: CustomUtils.GameManager.GameState.Start
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Start
        path: ''
        startLine: 740
      syntax:
        content:
          CSharp: Start = 0
          VB: Start = 0
        return:
          type: CustomUtils.GameManager.GameState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameState.Pause
      commentId: F:CustomUtils.GameManager.GameState.Pause
      language: CSharp
      name:
        CSharp: Pause
        VB: Pause
      nameWithType:
        CSharp: GameManager.GameState.Pause
        VB: GameManager.GameState.Pause
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameState.Pause
        VB: CustomUtils.GameManager.GameState.Pause
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Pause
        path: ''
        startLine: 741
      syntax:
        content:
          CSharp: Pause = 1
          VB: Pause = 1
        return:
          type: CustomUtils.GameManager.GameState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameState.Fight
      commentId: F:CustomUtils.GameManager.GameState.Fight
      language: CSharp
      name:
        CSharp: Fight
        VB: Fight
      nameWithType:
        CSharp: GameManager.GameState.Fight
        VB: GameManager.GameState.Fight
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameState.Fight
        VB: CustomUtils.GameManager.GameState.Fight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Fight
        path: ''
        startLine: 742
      syntax:
        content:
          CSharp: Fight = 2
          VB: Fight = 2
        return:
          type: CustomUtils.GameManager.GameState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameState.Defeat
      commentId: F:CustomUtils.GameManager.GameState.Defeat
      language: CSharp
      name:
        CSharp: Defeat
        VB: Defeat
      nameWithType:
        CSharp: GameManager.GameState.Defeat
        VB: GameManager.GameState.Defeat
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameState.Defeat
        VB: CustomUtils.GameManager.GameState.Defeat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Defeat
        path: ''
        startLine: 743
      syntax:
        content:
          CSharp: Defeat = 3
          VB: Defeat = 3
        return:
          type: CustomUtils.GameManager.GameState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.GameManager.GameState.CutScene
      commentId: F:CustomUtils.GameManager.GameState.CutScene
      language: CSharp
      name:
        CSharp: CutScene
        VB: CutScene
      nameWithType:
        CSharp: GameManager.GameState.CutScene
        VB: GameManager.GameState.CutScene
      qualifiedName:
        CSharp: CustomUtils.GameManager.GameState.CutScene
        VB: CustomUtils.GameManager.GameState.CutScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: CutScene
        path: ''
        startLine: 744
      syntax:
        content:
          CSharp: CutScene = 4
          VB: CutScene = 4
        return:
          type: CustomUtils.GameManager.GameState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CustomUtils.CursorManager
    commentId: T:CustomUtils.CursorManager
    language: CSharp
    name:
      CSharp: CursorManager
      VB: CursorManager
    nameWithType:
      CSharp: CursorManager
      VB: CursorManager
    qualifiedName:
      CSharp: CustomUtils.CursorManager
      VB: CustomUtils.CursorManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: CursorManager
      path: ''
      startLine: 1006
    summary: "\nstatic class for visible and moving or invisible and locked Cursor\n"
    example: []
    syntax:
      content:
        CSharp: public static class CursorManager
        VB: Public Module CursorManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: CustomUtils.CursorManager.SetCursor(CustomUtils.CursorManager.CursorEvent)
      commentId: M:CustomUtils.CursorManager.SetCursor(CustomUtils.CursorManager.CursorEvent)
      language: CSharp
      name:
        CSharp: SetCursor(CursorManager.CursorEvent)
        VB: SetCursor(CursorManager.CursorEvent)
      nameWithType:
        CSharp: CursorManager.SetCursor(CursorManager.CursorEvent)
        VB: CursorManager.SetCursor(CursorManager.CursorEvent)
      qualifiedName:
        CSharp: CustomUtils.CursorManager.SetCursor(CustomUtils.CursorManager.CursorEvent)
        VB: CustomUtils.CursorManager.SetCursor(CustomUtils.CursorManager.CursorEvent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: SetCursor
        path: ''
        startLine: 1017
      summary: "\nsets the Cursor either visible and movable or invisible and locked\ndefaulting to visible and movable Cursor\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetCursor(CursorManager.CursorEvent cursorVisibility)
          VB: Public Shared Sub SetCursor(cursorVisibility As CursorManager.CursorEvent)
        parameters:
        - id: cursorVisibility
          type: CustomUtils.CursorManager.CursorEvent
          description: ''
      overload: CustomUtils.CursorManager.SetCursor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CustomUtils.CursorManager.CursorEvent
    commentId: T:CustomUtils.CursorManager.CursorEvent
    language: CSharp
    name:
      CSharp: CursorManager.CursorEvent
      VB: CursorManager.CursorEvent
    nameWithType:
      CSharp: CursorManager.CursorEvent
      VB: CursorManager.CursorEvent
    qualifiedName:
      CSharp: CustomUtils.CursorManager.CursorEvent
      VB: CustomUtils.CursorManager.CursorEvent
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CustomUtils
    source:
      id: CursorEvent
      path: ''
      startLine: 1007
    syntax:
      content:
        CSharp: public enum CursorEvent
        VB: Public Enum CursorEvent
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CustomUtils.CursorManager.CursorEvent.Invisible
      commentId: F:CustomUtils.CursorManager.CursorEvent.Invisible
      language: CSharp
      name:
        CSharp: Invisible
        VB: Invisible
      nameWithType:
        CSharp: CursorManager.CursorEvent.Invisible
        VB: CursorManager.CursorEvent.Invisible
      qualifiedName:
        CSharp: CustomUtils.CursorManager.CursorEvent.Invisible
        VB: CustomUtils.CursorManager.CursorEvent.Invisible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Invisible
        path: ''
        startLine: 1008
      syntax:
        content:
          CSharp: Invisible = 0
          VB: Invisible = 0
        return:
          type: CustomUtils.CursorManager.CursorEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CustomUtils.CursorManager.CursorEvent.Visible
      commentId: F:CustomUtils.CursorManager.CursorEvent.Visible
      language: CSharp
      name:
        CSharp: Visible
        VB: Visible
      nameWithType:
        CSharp: CursorManager.CursorEvent.Visible
        VB: CursorManager.CursorEvent.Visible
      qualifiedName:
        CSharp: CustomUtils.CursorManager.CursorEvent.Visible
        VB: CustomUtils.CursorManager.CursorEvent.Visible
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CustomUtils
      source:
        id: Visible
        path: ''
        startLine: 1009
      syntax:
        content:
          CSharp: Visible = 1
          VB: Visible = 1
        return:
          type: CustomUtils.CursorManager.CursorEvent
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: Enemy
  commentId: N:Enemy
  language: CSharp
  name:
    CSharp: Enemy
    VB: Enemy
  nameWithType:
    CSharp: Enemy
    VB: Enemy
  qualifiedName:
    CSharp: Enemy
    VB: Enemy
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Enemy.FieldOfView
    commentId: T:Enemy.FieldOfView
    language: CSharp
    name:
      CSharp: FieldOfView
      VB: FieldOfView
    nameWithType:
      CSharp: FieldOfView
      VB: FieldOfView
    qualifiedName:
      CSharp: Enemy.FieldOfView
      VB: Enemy.FieldOfView
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: FieldOfView
      path: ''
      startLine: 1043
    summary: "\nFieldOfView implementation for enemy\n"
    example: []
    syntax:
      content:
        CSharp: public class FieldOfView
        VB: Public Class FieldOfView
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Enemy.FieldOfView.SeeRadius
      commentId: P:Enemy.FieldOfView.SeeRadius
      language: CSharp
      name:
        CSharp: SeeRadius
        VB: SeeRadius
      nameWithType:
        CSharp: FieldOfView.SeeRadius
        VB: FieldOfView.SeeRadius
      qualifiedName:
        CSharp: Enemy.FieldOfView.SeeRadius
        VB: Enemy.FieldOfView.SeeRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: SeeRadius
        path: ''
        startLine: 1045
      syntax:
        content:
          CSharp: public float SeeRadius { get; }
          VB: Public ReadOnly Property SeeRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: Enemy.FieldOfView.SeeRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Enemy.FieldOfView.Angle
      commentId: P:Enemy.FieldOfView.Angle
      language: CSharp
      name:
        CSharp: Angle
        VB: Angle
      nameWithType:
        CSharp: FieldOfView.Angle
        VB: FieldOfView.Angle
      qualifiedName:
        CSharp: Enemy.FieldOfView.Angle
        VB: Enemy.FieldOfView.Angle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: Angle
        path: ''
        startLine: 1048
      syntax:
        content:
          CSharp: public float Angle { get; }
          VB: Public ReadOnly Property Angle As Single
        parameters: []
        return:
          type: System.Single
      overload: Enemy.FieldOfView.Angle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Enemy.FieldOfView.BumpRadius
      commentId: P:Enemy.FieldOfView.BumpRadius
      language: CSharp
      name:
        CSharp: BumpRadius
        VB: BumpRadius
      nameWithType:
        CSharp: FieldOfView.BumpRadius
        VB: FieldOfView.BumpRadius
      qualifiedName:
        CSharp: Enemy.FieldOfView.BumpRadius
        VB: Enemy.FieldOfView.BumpRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: BumpRadius
        path: ''
        startLine: 1050
      syntax:
        content:
          CSharp: public float BumpRadius { get; }
          VB: Public ReadOnly Property BumpRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: Enemy.FieldOfView.BumpRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Enemy.FieldOfView.CanSeePlayer
      commentId: P:Enemy.FieldOfView.CanSeePlayer
      language: CSharp
      name:
        CSharp: CanSeePlayer
        VB: CanSeePlayer
      nameWithType:
        CSharp: FieldOfView.CanSeePlayer
        VB: FieldOfView.CanSeePlayer
      qualifiedName:
        CSharp: Enemy.FieldOfView.CanSeePlayer
        VB: Enemy.FieldOfView.CanSeePlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: CanSeePlayer
        path: ''
        startLine: 1058
      syntax:
        content:
          CSharp: public bool CanSeePlayer { get; set; }
          VB: Public Property CanSeePlayer As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: Enemy.FieldOfView.CanSeePlayer*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Enemy.FieldOfView.SeenTimer
      commentId: P:Enemy.FieldOfView.SeenTimer
      language: CSharp
      name:
        CSharp: SeenTimer
        VB: SeenTimer
      nameWithType:
        CSharp: FieldOfView.SeenTimer
        VB: FieldOfView.SeenTimer
      qualifiedName:
        CSharp: Enemy.FieldOfView.SeenTimer
        VB: Enemy.FieldOfView.SeenTimer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: SeenTimer
        path: ''
        startLine: 1063
      syntax:
        content:
          CSharp: public float SeenTimer { get; }
          VB: Public ReadOnly Property SeenTimer As Single
        parameters: []
        return:
          type: System.Single
      overload: Enemy.FieldOfView.SeenTimer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Enemy.FieldOfView.FOVRoutine
      commentId: M:Enemy.FieldOfView.FOVRoutine
      language: CSharp
      name:
        CSharp: FOVRoutine()
        VB: FOVRoutine()
      nameWithType:
        CSharp: FieldOfView.FOVRoutine()
        VB: FieldOfView.FOVRoutine()
      qualifiedName:
        CSharp: Enemy.FieldOfView.FOVRoutine()
        VB: Enemy.FieldOfView.FOVRoutine()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: FOVRoutine
        path: ''
        startLine: 1074
      summary: "\nupdating the state\nwhile gameObject is Alive perform FOVCheck\n"
      example: []
      syntax:
        content:
          CSharp: public IEnumerator FOVRoutine()
          VB: Public Function FOVRoutine As IEnumerator
        return:
          type: IEnumerator
          description: ''
      overload: Enemy.FieldOfView.FOVRoutine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.FieldOfView.CalcDetectTime
      commentId: M:Enemy.FieldOfView.CalcDetectTime
      language: CSharp
      name:
        CSharp: CalcDetectTime()
        VB: CalcDetectTime()
      nameWithType:
        CSharp: FieldOfView.CalcDetectTime()
        VB: FieldOfView.CalcDetectTime()
      qualifiedName:
        CSharp: Enemy.FieldOfView.CalcDetectTime()
        VB: Enemy.FieldOfView.CalcDetectTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: CalcDetectTime
        path: ''
        startLine: 1127
      syntax:
        content:
          CSharp: public void CalcDetectTime()
          VB: Public Sub CalcDetectTime
      overload: Enemy.FieldOfView.CalcDetectTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Enemy.DragonSpawnManager
    commentId: T:Enemy.DragonSpawnManager
    language: CSharp
    name:
      CSharp: DragonSpawnManager
      VB: DragonSpawnManager
    nameWithType:
      CSharp: DragonSpawnManager
      VB: DragonSpawnManager
    qualifiedName:
      CSharp: Enemy.DragonSpawnManager
      VB: Enemy.DragonSpawnManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: DragonSpawnManager
      path: ''
      startLine: 1146
    summary: "\nScriptableObject for modifying dragons that will be spawned\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DragonSpawnManager : ScriptableObject'
        VB: >-
          Public Class DragonSpawnManager

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Enemy.DragonSpawnManager.SpawnDragon(System.Int32)
      commentId: M:Enemy.DragonSpawnManager.SpawnDragon(System.Int32)
      language: CSharp
      name:
        CSharp: SpawnDragon(Int32)
        VB: SpawnDragon(Int32)
      nameWithType:
        CSharp: DragonSpawnManager.SpawnDragon(Int32)
        VB: DragonSpawnManager.SpawnDragon(Int32)
      qualifiedName:
        CSharp: Enemy.DragonSpawnManager.SpawnDragon(System.Int32)
        VB: Enemy.DragonSpawnManager.SpawnDragon(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: SpawnDragon
        path: ''
        startLine: 1159
      summary: "\nsetting currentEnemyIdx reference in GameManager\nspawning GameObject prefab according to the number\n"
      example: []
      syntax:
        content:
          CSharp: public void SpawnDragon(int dragonNumber)
          VB: Public Sub SpawnDragon(dragonNumber As Integer)
        parameters:
        - id: dragonNumber
          type: System.Int32
          description: ''
      overload: Enemy.DragonSpawnManager.SpawnDragon*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Enemy.TornadoDragon
    commentId: T:Enemy.TornadoDragon
    language: CSharp
    name:
      CSharp: TornadoDragon
      VB: TornadoDragon
    nameWithType:
      CSharp: TornadoDragon
      VB: TornadoDragon
    qualifiedName:
      CSharp: Enemy.TornadoDragon
      VB: Enemy.TornadoDragon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: TornadoDragon
      path: ''
      startLine: 1212
    summary: "\nsame as FireBallDragon class\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TornadoDragon : MonoBehaviour'
        VB: >-
          Public Class TornadoDragon

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Enemy.DestroyMultipleTornado
    commentId: T:Enemy.DestroyMultipleTornado
    language: CSharp
    name:
      CSharp: DestroyMultipleTornado
      VB: DestroyMultipleTornado
    nameWithType:
      CSharp: DestroyMultipleTornado
      VB: DestroyMultipleTornado
    qualifiedName:
      CSharp: Enemy.DestroyMultipleTornado
      VB: Enemy.DestroyMultipleTornado
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: DestroyMultipleTornado
      path: ''
      startLine: 1253
    syntax:
      content:
        CSharp: 'public class DestroyMultipleTornado : MonoBehaviour'
        VB: >-
          Public Class DestroyMultipleTornado

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Enemy.EnemyMeleeAnimations
    commentId: T:Enemy.EnemyMeleeAnimations
    language: CSharp
    name:
      CSharp: EnemyMeleeAnimations
      VB: EnemyMeleeAnimations
    nameWithType:
      CSharp: EnemyMeleeAnimations
      VB: EnemyMeleeAnimations
    qualifiedName:
      CSharp: Enemy.EnemyMeleeAnimations
      VB: Enemy.EnemyMeleeAnimations
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: EnemyMeleeAnimations
      path: ''
      startLine: 1267
    summary: "\ngrounded enemy animations\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EnemyMeleeAnimations : MonoBehaviour'
        VB: >-
          Public Class EnemyMeleeAnimations

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Enemy.Enemy
    commentId: T:Enemy.Enemy
    language: CSharp
    name:
      CSharp: Enemy
      VB: Enemy
    nameWithType:
      CSharp: Enemy
      VB: Enemy
    qualifiedName:
      CSharp: Enemy.Enemy
      VB: Enemy.Enemy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: Enemy
      path: ''
      startLine: 1340
    summary: "\nbasic enemy behaviour\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Enemy : MonoBehaviour'
        VB: >-
          Public Class Enemy

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Enemy.Enemy.fov
      commentId: F:Enemy.Enemy.fov
      language: CSharp
      name:
        CSharp: fov
        VB: fov
      nameWithType:
        CSharp: Enemy.fov
        VB: Enemy.fov
      qualifiedName:
        CSharp: Enemy.Enemy.fov
        VB: Enemy.Enemy.fov
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: fov
        path: ''
        startLine: 1343
      syntax:
        content:
          CSharp: public FieldOfView fov
          VB: Public fov As FieldOfView
        return:
          type: Enemy.FieldOfView
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.Enemy.path
      commentId: F:Enemy.Enemy.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: Enemy.path
        VB: Enemy.path
      qualifiedName:
        CSharp: Enemy.Enemy.path
        VB: Enemy.Enemy.path
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: path
        path: ''
        startLine: 1344
      syntax:
        content:
          CSharp: public List<Vector3> path
          VB: Public path As List(Of Vector3)
        return:
          type: List{Vector3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.Enemy.State
      commentId: P:Enemy.Enemy.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: Enemy.State
        VB: Enemy.State
      qualifiedName:
        CSharp: Enemy.Enemy.State
        VB: Enemy.Enemy.State
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: State
        path: ''
        startLine: 1347
      syntax:
        content:
          CSharp: public EnemyStates State { get; }
          VB: Public ReadOnly Property State As EnemyStates
        parameters: []
        return:
          type: Enemy.EnemyStates
      overload: Enemy.Enemy.State*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Enemy.Enemy.GettingHit(Vector3)
      commentId: M:Enemy.Enemy.GettingHit(Vector3)
      language: CSharp
      name:
        CSharp: GettingHit(Vector3)
        VB: GettingHit(Vector3)
      nameWithType:
        CSharp: Enemy.GettingHit(Vector3)
        VB: Enemy.GettingHit(Vector3)
      qualifiedName:
        CSharp: Enemy.Enemy.GettingHit(Vector3)
        VB: Enemy.Enemy.GettingHit(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: GettingHit
        path: ''
        startLine: 1368
      syntax:
        content:
          CSharp: public void GettingHit(Vector3 contactPoint)
          VB: Public Sub GettingHit(contactPoint As Vector3)
        parameters:
        - id: contactPoint
          type: Vector3
      overload: Enemy.Enemy.GettingHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Enemy.EnemyStates
    commentId: T:Enemy.EnemyStates
    language: CSharp
    name:
      CSharp: EnemyStates
      VB: EnemyStates
    nameWithType:
      CSharp: EnemyStates
      VB: EnemyStates
    qualifiedName:
      CSharp: Enemy.EnemyStates
      VB: Enemy.EnemyStates
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: EnemyStates
      path: ''
      startLine: 1406
    syntax:
      content:
        CSharp: public class EnemyStates
        VB: Public Class EnemyStates
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Enemy.EnemyStates.isAttackingMelee
      commentId: F:Enemy.EnemyStates.isAttackingMelee
      language: CSharp
      name:
        CSharp: isAttackingMelee
        VB: isAttackingMelee
      nameWithType:
        CSharp: EnemyStates.isAttackingMelee
        VB: EnemyStates.isAttackingMelee
      qualifiedName:
        CSharp: Enemy.EnemyStates.isAttackingMelee
        VB: Enemy.EnemyStates.isAttackingMelee
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: isAttackingMelee
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool isAttackingMelee
          VB: Public isAttackingMelee As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.EnemyStates.isAttackingRanged
      commentId: F:Enemy.EnemyStates.isAttackingRanged
      language: CSharp
      name:
        CSharp: isAttackingRanged
        VB: isAttackingRanged
      nameWithType:
        CSharp: EnemyStates.isAttackingRanged
        VB: EnemyStates.isAttackingRanged
      qualifiedName:
        CSharp: Enemy.EnemyStates.isAttackingRanged
        VB: Enemy.EnemyStates.isAttackingRanged
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: isAttackingRanged
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool isAttackingRanged
          VB: Public isAttackingRanged As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.EnemyStates.isWalking
      commentId: F:Enemy.EnemyStates.isWalking
      language: CSharp
      name:
        CSharp: isWalking
        VB: isWalking
      nameWithType:
        CSharp: EnemyStates.isWalking
        VB: EnemyStates.isWalking
      qualifiedName:
        CSharp: Enemy.EnemyStates.isWalking
        VB: Enemy.EnemyStates.isWalking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: isWalking
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool isWalking
          VB: Public isWalking As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.EnemyStates.isDead
      commentId: F:Enemy.EnemyStates.isDead
      language: CSharp
      name:
        CSharp: isDead
        VB: isDead
      nameWithType:
        CSharp: EnemyStates.isDead
        VB: EnemyStates.isDead
      qualifiedName:
        CSharp: Enemy.EnemyStates.isDead
        VB: Enemy.EnemyStates.isDead
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: isDead
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool isDead
          VB: Public isDead As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.EnemyStates.isHit
      commentId: F:Enemy.EnemyStates.isHit
      language: CSharp
      name:
        CSharp: isHit
        VB: isHit
      nameWithType:
        CSharp: EnemyStates.isHit
        VB: EnemyStates.isHit
      qualifiedName:
        CSharp: Enemy.EnemyStates.isHit
        VB: Enemy.EnemyStates.isHit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: isHit
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool isHit
          VB: Public isHit As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Enemy.EnemyStates.foundPlayer
      commentId: F:Enemy.EnemyStates.foundPlayer
      language: CSharp
      name:
        CSharp: foundPlayer
        VB: foundPlayer
      nameWithType:
        CSharp: EnemyStates.foundPlayer
        VB: EnemyStates.foundPlayer
      qualifiedName:
        CSharp: Enemy.EnemyStates.foundPlayer
        VB: Enemy.EnemyStates.foundPlayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Enemy
      source:
        id: foundPlayer
        path: ''
        startLine: 1407
      syntax:
        content:
          CSharp: public bool foundPlayer
          VB: Public foundPlayer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Enemy.EnemyAttacks
    commentId: T:Enemy.EnemyAttacks
    language: CSharp
    name:
      CSharp: EnemyAttacks
      VB: EnemyAttacks
    nameWithType:
      CSharp: EnemyAttacks
      VB: EnemyAttacks
    qualifiedName:
      CSharp: Enemy.EnemyAttacks
      VB: Enemy.EnemyAttacks
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: EnemyAttacks
      path: ''
      startLine: 1419
    summary: "\nclass for Enemy Attacks\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EnemyAttacks : MonoBehaviour'
        VB: >-
          Public Class EnemyAttacks

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Enemy.EnemyRangedAnimations
    commentId: T:Enemy.EnemyRangedAnimations
    language: CSharp
    name:
      CSharp: EnemyRangedAnimations
      VB: EnemyRangedAnimations
    nameWithType:
      CSharp: EnemyRangedAnimations
      VB: EnemyRangedAnimations
    qualifiedName:
      CSharp: Enemy.EnemyRangedAnimations
      VB: Enemy.EnemyRangedAnimations
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: EnemyRangedAnimations
      path: ''
      startLine: 1571
    summary: "\nflying enemy animations\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EnemyRangedAnimations : MonoBehaviour'
        VB: >-
          Public Class EnemyRangedAnimations

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Enemy.FireBallDragon
    commentId: T:Enemy.FireBallDragon
    language: CSharp
    name:
      CSharp: FireBallDragon
      VB: FireBallDragon
    nameWithType:
      CSharp: FireBallDragon
      VB: FireBallDragon
    qualifiedName:
      CSharp: Enemy.FireBallDragon
      VB: Enemy.FireBallDragon
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Enemy
    source:
      id: FireBallDragon
      path: ''
      startLine: 1639
    syntax:
      content:
        CSharp: 'public class FireBallDragon : MonoBehaviour'
        VB: >-
          Public Class FireBallDragon

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: Sound
  commentId: N:Sound
  language: CSharp
  name:
    CSharp: Sound
    VB: Sound
  nameWithType:
    CSharp: Sound
    VB: Sound
  qualifiedName:
    CSharp: Sound
    VB: Sound
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Sound.SoundSource
    commentId: T:Sound.SoundSource
    language: CSharp
    name:
      CSharp: SoundSource
      VB: SoundSource
    nameWithType:
      CSharp: SoundSource
      VB: SoundSource
    qualifiedName:
      CSharp: Sound.SoundSource
      VB: Sound.SoundSource
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Sound
    source:
      id: SoundSource
      path: ''
      startLine: 1691
    syntax:
      content:
        CSharp: 'public class SoundSource : ScriptableObject'
        VB: >-
          Public Class SoundSource

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Sound.SoundSource.sound
      commentId: F:Sound.SoundSource.sound
      language: CSharp
      name:
        CSharp: sound
        VB: sound
      nameWithType:
        CSharp: SoundSource.sound
        VB: SoundSource.sound
      qualifiedName:
        CSharp: Sound.SoundSource.sound
        VB: Sound.SoundSource.sound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: sound
        path: ''
        startLine: 1694
      syntax:
        content:
          CSharp: public AudioSource sound
          VB: Public sound As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundSource.audioC
      commentId: F:Sound.SoundSource.audioC
      language: CSharp
      name:
        CSharp: audioC
        VB: audioC
      nameWithType:
        CSharp: SoundSource.audioC
        VB: SoundSource.audioC
      qualifiedName:
        CSharp: Sound.SoundSource.audioC
        VB: Sound.SoundSource.audioC
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: audioC
        path: ''
        startLine: 1695
      syntax:
        content:
          CSharp: public AudioClip audioC
          VB: Public audioC As AudioClip
        return:
          type: AudioClip
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundSource.Play(Transform)
      commentId: M:Sound.SoundSource.Play(Transform)
      language: CSharp
      name:
        CSharp: Play(Transform)
        VB: Play(Transform)
      nameWithType:
        CSharp: SoundSource.Play(Transform)
        VB: SoundSource.Play(Transform)
      qualifiedName:
        CSharp: Sound.SoundSource.Play(Transform)
        VB: Sound.SoundSource.Play(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: Play
        path: ''
        startLine: 1736
      summary: "\nsets the audioClip\ninstantiates a GameObjects\nPlays the Sound\n"
      example: []
      syntax:
        content:
          CSharp: public AudioSource Play(Transform parent)
          VB: Public Function Play(parent As Transform) As AudioSource
        parameters:
        - id: parent
          type: Transform
          description: position of the GameObject
        return:
          type: AudioSource
          description: playing AudioSource
      overload: Sound.SoundSource.Play*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundSource.Play(Transform,System.Single)
      commentId: M:Sound.SoundSource.Play(Transform,System.Single)
      language: CSharp
      name:
        CSharp: Play(Transform, Single)
        VB: Play(Transform, Single)
      nameWithType:
        CSharp: SoundSource.Play(Transform, Single)
        VB: SoundSource.Play(Transform, Single)
      qualifiedName:
        CSharp: Sound.SoundSource.Play(Transform, System.Single)
        VB: Sound.SoundSource.Play(Transform, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: Play
        path: ''
        startLine: 1750
      summary: "\nsets the audioClip\ninstantiates a GameObjects\nPlays the Sound with the effectVolume\n"
      example: []
      syntax:
        content:
          CSharp: public void Play(Transform parent, float effectVolume)
          VB: Public Sub Play(parent As Transform, effectVolume As Single)
        parameters:
        - id: parent
          type: Transform
          description: position of the GameObject
        - id: effectVolume
          type: System.Single
          description: volume of the soundEffect
      overload: Sound.SoundSource.Play*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundSource.Reset
      commentId: M:Sound.SoundSource.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: SoundSource.Reset()
        VB: SoundSource.Reset()
      qualifiedName:
        CSharp: Sound.SoundSource.Reset()
        VB: Sound.SoundSource.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: Reset
        path: ''
        startLine: 1760
      summary: "\nstops the sound\n"
      example: []
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: Sound.SoundSource.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Sound.SoundManager
    commentId: T:Sound.SoundManager
    language: CSharp
    name:
      CSharp: SoundManager
      VB: SoundManager
    nameWithType:
      CSharp: SoundManager
      VB: SoundManager
    qualifiedName:
      CSharp: Sound.SoundManager
      VB: Sound.SoundManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Sound
    source:
      id: SoundManager
      path: ''
      startLine: 1773
    summary: "\nSound Manager class\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SoundManager : MonoBehaviour'
        VB: >-
          Public Class SoundManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Sound.SoundManager.OnSoundEffect(Transform,Sound.SoundSource)
      commentId: M:Sound.SoundManager.OnSoundEffect(Transform,Sound.SoundSource)
      language: CSharp
      name:
        CSharp: OnSoundEffect(Transform, SoundSource)
        VB: OnSoundEffect(Transform, SoundSource)
      nameWithType:
        CSharp: SoundManager.OnSoundEffect(Transform, SoundSource)
        VB: SoundManager.OnSoundEffect(Transform, SoundSource)
      qualifiedName:
        CSharp: Sound.SoundManager.OnSoundEffect(Transform, Sound.SoundSource)
        VB: Sound.SoundManager.OnSoundEffect(Transform, Sound.SoundSource)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: OnSoundEffect
        path: ''
        startLine: 1783
      syntax:
        content:
          CSharp: public void OnSoundEffect(Transform position, SoundSource hitEffectRef)
          VB: Public Sub OnSoundEffect(position As Transform, hitEffectRef As SoundSource)
        parameters:
        - id: position
          type: Transform
        - id: hitEffectRef
          type: Sound.SoundSource
      overload: Sound.SoundManager.OnSoundEffect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundManager.VolumeChangeMusic(Slider)
      commentId: M:Sound.SoundManager.VolumeChangeMusic(Slider)
      language: CSharp
      name:
        CSharp: VolumeChangeMusic(Slider)
        VB: VolumeChangeMusic(Slider)
      nameWithType:
        CSharp: SoundManager.VolumeChangeMusic(Slider)
        VB: SoundManager.VolumeChangeMusic(Slider)
      qualifiedName:
        CSharp: Sound.SoundManager.VolumeChangeMusic(Slider)
        VB: Sound.SoundManager.VolumeChangeMusic(Slider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: VolumeChangeMusic
        path: ''
        startLine: 1787
      syntax:
        content:
          CSharp: public void VolumeChangeMusic(Slider musicSlider)
          VB: Public Sub VolumeChangeMusic(musicSlider As Slider)
        parameters:
        - id: musicSlider
          type: Slider
      overload: Sound.SoundManager.VolumeChangeMusic*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Sound.SoundManager.VolumeChangeEffects(Slider)
      commentId: M:Sound.SoundManager.VolumeChangeEffects(Slider)
      language: CSharp
      name:
        CSharp: VolumeChangeEffects(Slider)
        VB: VolumeChangeEffects(Slider)
      nameWithType:
        CSharp: SoundManager.VolumeChangeEffects(Slider)
        VB: SoundManager.VolumeChangeEffects(Slider)
      qualifiedName:
        CSharp: Sound.SoundManager.VolumeChangeEffects(Slider)
        VB: Sound.SoundManager.VolumeChangeEffects(Slider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Sound
      source:
        id: VolumeChangeEffects
        path: ''
        startLine: 1791
      syntax:
        content:
          CSharp: public void VolumeChangeEffects(Slider effectSlider)
          VB: Public Sub VolumeChangeEffects(effectSlider As Slider)
        parameters:
        - id: effectSlider
          type: Slider
      overload: Sound.SoundManager.VolumeChangeEffects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Player
  commentId: N:Player
  language: CSharp
  name:
    CSharp: Player
    VB: Player
  nameWithType:
    CSharp: Player
    VB: Player
  qualifiedName:
    CSharp: Player
    VB: Player
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Player.CineMachineSwitcher
    commentId: T:Player.CineMachineSwitcher
    language: CSharp
    name:
      CSharp: CineMachineSwitcher
      VB: CineMachineSwitcher
    nameWithType:
      CSharp: CineMachineSwitcher
      VB: CineMachineSwitcher
    qualifiedName:
      CSharp: Player.CineMachineSwitcher
      VB: Player.CineMachineSwitcher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: CineMachineSwitcher
      path: ''
      startLine: 1805
    summary: "\nbehaviour for switching 3rd person to 1st person with camera locked to dragon\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CineMachineSwitcher : MonoBehaviour'
        VB: >-
          Public Class CineMachineSwitcher

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Player.CineMachineSwitcher.enemyTarget
      commentId: F:Player.CineMachineSwitcher.enemyTarget
      language: CSharp
      name:
        CSharp: enemyTarget
        VB: enemyTarget
      nameWithType:
        CSharp: CineMachineSwitcher.enemyTarget
        VB: CineMachineSwitcher.enemyTarget
      qualifiedName:
        CSharp: Player.CineMachineSwitcher.enemyTarget
        VB: Player.CineMachineSwitcher.enemyTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: enemyTarget
        path: ''
        startLine: 1807
      syntax:
        content:
          CSharp: public CinemachineVirtualCamera enemyTarget
          VB: Public enemyTarget As CinemachineVirtualCamera
        return:
          type: CinemachineVirtualCamera
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.CineMachineSwitcher.SwitchLock
      commentId: M:Player.CineMachineSwitcher.SwitchLock
      language: CSharp
      name:
        CSharp: SwitchLock()
        VB: SwitchLock()
      nameWithType:
        CSharp: CineMachineSwitcher.SwitchLock()
        VB: CineMachineSwitcher.SwitchLock()
      qualifiedName:
        CSharp: Player.CineMachineSwitcher.SwitchLock()
        VB: Player.CineMachineSwitcher.SwitchLock()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: SwitchLock
        path: ''
        startLine: 1832
      summary: "\nenabling 1st Person disabling 3rd Person\nor\nenabling 3rd Person disabling 1st Person\n"
      example: []
      syntax:
        content:
          CSharp: public void SwitchLock()
          VB: Public Sub SwitchLock
      overload: Player.CineMachineSwitcher.SwitchLock*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Player.MovementController
    commentId: T:Player.MovementController
    language: CSharp
    name:
      CSharp: MovementController
      VB: MovementController
    nameWithType:
      CSharp: MovementController
      VB: MovementController
    qualifiedName:
      CSharp: Player.MovementController
      VB: Player.MovementController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: MovementController
      path: ''
      startLine: 1850
    summary: "\nHandling Movement for the Player\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MovementController : MonoBehaviour'
        VB: >-
          Public Class MovementController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Player.MovementController.walkSpeed
      commentId: F:Player.MovementController.walkSpeed
      language: CSharp
      name:
        CSharp: walkSpeed
        VB: walkSpeed
      nameWithType:
        CSharp: MovementController.walkSpeed
        VB: MovementController.walkSpeed
      qualifiedName:
        CSharp: Player.MovementController.walkSpeed
        VB: Player.MovementController.walkSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: walkSpeed
        path: ''
        startLine: 1855
      syntax:
        content:
          CSharp: public float walkSpeed
          VB: Public walkSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.MovementController.turnTime
      commentId: F:Player.MovementController.turnTime
      language: CSharp
      name:
        CSharp: turnTime
        VB: turnTime
      nameWithType:
        CSharp: MovementController.turnTime
        VB: MovementController.turnTime
      qualifiedName:
        CSharp: Player.MovementController.turnTime
        VB: Player.MovementController.turnTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: turnTime
        path: ''
        startLine: 1858
      syntax:
        content:
          CSharp: public float turnTime
          VB: Public turnTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.MovementController.States
      commentId: P:Player.MovementController.States
      language: CSharp
      name:
        CSharp: States
        VB: States
      nameWithType:
        CSharp: MovementController.States
        VB: MovementController.States
      qualifiedName:
        CSharp: Player.MovementController.States
        VB: Player.MovementController.States
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: States
        path: ''
        startLine: 1862
      syntax:
        content:
          CSharp: public PlayerStates States { get; }
          VB: Public ReadOnly Property States As PlayerStates
        parameters: []
        return:
          type: Player.PlayerStates
      overload: Player.MovementController.States*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Player.FireBallPlayer
    commentId: T:Player.FireBallPlayer
    language: CSharp
    name:
      CSharp: FireBallPlayer
      VB: FireBallPlayer
    nameWithType:
      CSharp: FireBallPlayer
      VB: FireBallPlayer
    qualifiedName:
      CSharp: Player.FireBallPlayer
      VB: Player.FireBallPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: FireBallPlayer
      path: ''
      startLine: 1961
    summary: "\ntornado behaviour after instantiation\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FireBallPlayer : MonoBehaviour'
        VB: >-
          Public Class FireBallPlayer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Player.Controller
    commentId: T:Player.Controller
    language: CSharp
    name:
      CSharp: Controller
      VB: Controller
    nameWithType:
      CSharp: Controller
      VB: Controller
    qualifiedName:
      CSharp: Player.Controller
      VB: Player.Controller
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: Controller
      path: ''
      startLine: 1999
    summary: "\nbasic controls for Player like\nHealth\nGetHit-Animation\nScore\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Controller : MonoBehaviour'
        VB: >-
          Public Class Controller

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Player.Controller.GotHit
      commentId: M:Player.Controller.GotHit
      language: CSharp
      name:
        CSharp: GotHit()
        VB: GotHit()
      nameWithType:
        CSharp: Controller.GotHit()
        VB: Controller.GotHit()
      qualifiedName:
        CSharp: Player.Controller.GotHit()
        VB: Player.Controller.GotHit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: GotHit
        path: ''
        startLine: 2016
      syntax:
        content:
          CSharp: public void GotHit()
          VB: Public Sub GotHit
      overload: Player.Controller.GotHit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.Controller.UpdateScore(System.Int32)
      commentId: M:Player.Controller.UpdateScore(System.Int32)
      language: CSharp
      name:
        CSharp: UpdateScore(Int32)
        VB: UpdateScore(Int32)
      nameWithType:
        CSharp: Controller.UpdateScore(Int32)
        VB: Controller.UpdateScore(Int32)
      qualifiedName:
        CSharp: Player.Controller.UpdateScore(System.Int32)
        VB: Player.Controller.UpdateScore(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: UpdateScore
        path: ''
        startLine: 2021
      syntax:
        content:
          CSharp: public void UpdateScore(int dragonNumber)
          VB: Public Sub UpdateScore(dragonNumber As Integer)
        parameters:
        - id: dragonNumber
          type: System.Int32
      overload: Player.Controller.UpdateScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.Controller.GetScore
      commentId: M:Player.Controller.GetScore
      language: CSharp
      name:
        CSharp: GetScore()
        VB: GetScore()
      nameWithType:
        CSharp: Controller.GetScore()
        VB: Controller.GetScore()
      qualifiedName:
        CSharp: Player.Controller.GetScore()
        VB: Player.Controller.GetScore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: GetScore
        path: ''
        startLine: 2035
      syntax:
        content:
          CSharp: public string GetScore()
          VB: Public Function GetScore As String
        return:
          type: System.String
      overload: Player.Controller.GetScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.Controller.GetScoreSystem
      commentId: M:Player.Controller.GetScoreSystem
      language: CSharp
      name:
        CSharp: GetScoreSystem()
        VB: GetScoreSystem()
      nameWithType:
        CSharp: Controller.GetScoreSystem()
        VB: Controller.GetScoreSystem()
      qualifiedName:
        CSharp: Player.Controller.GetScoreSystem()
        VB: Player.Controller.GetScoreSystem()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: GetScoreSystem
        path: ''
        startLine: 2038
      syntax:
        content:
          CSharp: public ScoreSystem GetScoreSystem()
          VB: Public Function GetScoreSystem As ScoreSystem
        return:
          type: CustomUtils.ScoreSystem
      overload: Player.Controller.GetScoreSystem*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.Controller.ResetScore
      commentId: M:Player.Controller.ResetScore
      language: CSharp
      name:
        CSharp: ResetScore()
        VB: ResetScore()
      nameWithType:
        CSharp: Controller.ResetScore()
        VB: Controller.ResetScore()
      qualifiedName:
        CSharp: Player.Controller.ResetScore()
        VB: Player.Controller.ResetScore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: ResetScore
        path: ''
        startLine: 2042
      syntax:
        content:
          CSharp: public void ResetScore()
          VB: Public Sub ResetScore
      overload: Player.Controller.ResetScore*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Player.Attacks
    commentId: T:Player.Attacks
    language: CSharp
    name:
      CSharp: Attacks
      VB: Attacks
    nameWithType:
      CSharp: Attacks
      VB: Attacks
    qualifiedName:
      CSharp: Player.Attacks
      VB: Player.Attacks
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: Attacks
      path: ''
      startLine: 2057
    summary: "\nHandling Abilities Tornado and Shield \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Attacks : MonoBehaviour'
        VB: >-
          Public Class Attacks

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Player.Attacks.hasAttackCoolDown
      commentId: F:Player.Attacks.hasAttackCoolDown
      language: CSharp
      name:
        CSharp: hasAttackCoolDown
        VB: hasAttackCoolDown
      nameWithType:
        CSharp: Attacks.hasAttackCoolDown
        VB: Attacks.hasAttackCoolDown
      qualifiedName:
        CSharp: Player.Attacks.hasAttackCoolDown
        VB: Player.Attacks.hasAttackCoolDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: hasAttackCoolDown
        path: ''
        startLine: 2072
      syntax:
        content:
          CSharp: public bool hasAttackCoolDown
          VB: Public hasAttackCoolDown As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.Attacks.hasDefenseCoolDown
      commentId: F:Player.Attacks.hasDefenseCoolDown
      language: CSharp
      name:
        CSharp: hasDefenseCoolDown
        VB: hasDefenseCoolDown
      nameWithType:
        CSharp: Attacks.hasDefenseCoolDown
        VB: Attacks.hasDefenseCoolDown
      qualifiedName:
        CSharp: Player.Attacks.hasDefenseCoolDown
        VB: Player.Attacks.hasDefenseCoolDown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: hasDefenseCoolDown
        path: ''
        startLine: 2073
      syntax:
        content:
          CSharp: public bool hasDefenseCoolDown
          VB: Public hasDefenseCoolDown As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Player.AnimationHandler
    commentId: T:Player.AnimationHandler
    language: CSharp
    name:
      CSharp: AnimationHandler
      VB: AnimationHandler
    nameWithType:
      CSharp: AnimationHandler
      VB: AnimationHandler
    qualifiedName:
      CSharp: Player.AnimationHandler
      VB: Player.AnimationHandler
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: AnimationHandler
      path: ''
      startLine: 2238
    summary: "\nAnimation handling for the wizard\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AnimationHandler : MonoBehaviour'
        VB: >-
          Public Class AnimationHandler

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Player.PlayerAnimationState
    commentId: T:Player.PlayerAnimationState
    language: CSharp
    name:
      CSharp: PlayerAnimationState
      VB: PlayerAnimationState
    nameWithType:
      CSharp: PlayerAnimationState
      VB: PlayerAnimationState
    qualifiedName:
      CSharp: Player.PlayerAnimationState
      VB: Player.PlayerAnimationState
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: PlayerAnimationState
      path: ''
      startLine: 2305
    syntax:
      content:
        CSharp: public static class PlayerAnimationState
        VB: Public Module PlayerAnimationState
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Player.PlayerAnimationState.isWalking
      commentId: F:Player.PlayerAnimationState.isWalking
      language: CSharp
      name:
        CSharp: isWalking
        VB: isWalking
      nameWithType:
        CSharp: PlayerAnimationState.isWalking
        VB: PlayerAnimationState.isWalking
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isWalking
        VB: Player.PlayerAnimationState.isWalking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isWalking
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isWalking
          VB: Public Shared isWalking As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isJumping
      commentId: F:Player.PlayerAnimationState.isJumping
      language: CSharp
      name:
        CSharp: isJumping
        VB: isJumping
      nameWithType:
        CSharp: PlayerAnimationState.isJumping
        VB: PlayerAnimationState.isJumping
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isJumping
        VB: Player.PlayerAnimationState.isJumping
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isJumping
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isJumping
          VB: Public Shared isJumping As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isRunning
      commentId: F:Player.PlayerAnimationState.isRunning
      language: CSharp
      name:
        CSharp: isRunning
        VB: isRunning
      nameWithType:
        CSharp: PlayerAnimationState.isRunning
        VB: PlayerAnimationState.isRunning
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isRunning
        VB: Player.PlayerAnimationState.isRunning
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isRunning
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isRunning
          VB: Public Shared isRunning As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isAttacking
      commentId: F:Player.PlayerAnimationState.isAttacking
      language: CSharp
      name:
        CSharp: isAttacking
        VB: isAttacking
      nameWithType:
        CSharp: PlayerAnimationState.isAttacking
        VB: PlayerAnimationState.isAttacking
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isAttacking
        VB: Player.PlayerAnimationState.isAttacking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isAttacking
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isAttacking
          VB: Public Shared isAttacking As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isDefending
      commentId: F:Player.PlayerAnimationState.isDefending
      language: CSharp
      name:
        CSharp: isDefending
        VB: isDefending
      nameWithType:
        CSharp: PlayerAnimationState.isDefending
        VB: PlayerAnimationState.isDefending
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isDefending
        VB: Player.PlayerAnimationState.isDefending
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isDefending
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isDefending
          VB: Public Shared isDefending As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isDead
      commentId: F:Player.PlayerAnimationState.isDead
      language: CSharp
      name:
        CSharp: isDead
        VB: isDead
      nameWithType:
        CSharp: PlayerAnimationState.isDead
        VB: PlayerAnimationState.isDead
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isDead
        VB: Player.PlayerAnimationState.isDead
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isDead
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isDead
          VB: Public Shared isDead As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Player.PlayerAnimationState.isLevitating
      commentId: F:Player.PlayerAnimationState.isLevitating
      language: CSharp
      name:
        CSharp: isLevitating
        VB: isLevitating
      nameWithType:
        CSharp: PlayerAnimationState.isLevitating
        VB: PlayerAnimationState.isLevitating
      qualifiedName:
        CSharp: Player.PlayerAnimationState.isLevitating
        VB: Player.PlayerAnimationState.isLevitating
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: isLevitating
        path: ''
        startLine: 2306
      syntax:
        content:
          CSharp: public static bool isLevitating
          VB: Public Shared isLevitating As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Player.PlayerStates
    commentId: T:Player.PlayerStates
    language: CSharp
    name:
      CSharp: PlayerStates
      VB: PlayerStates
    nameWithType:
      CSharp: PlayerStates
      VB: PlayerStates
    qualifiedName:
      CSharp: Player.PlayerStates
      VB: Player.PlayerStates
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Player
    source:
      id: PlayerStates
      path: ''
      startLine: 2309
    syntax:
      content:
        CSharp: public class PlayerStates
        VB: Public Class PlayerStates
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Player.PlayerStates.move
      commentId: F:Player.PlayerStates.move
      language: CSharp
      name:
        CSharp: move
        VB: move
      nameWithType:
        CSharp: PlayerStates.move
        VB: PlayerStates.move
      qualifiedName:
        CSharp: Player.PlayerStates.move
        VB: Player.PlayerStates.move
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: move
        path: ''
        startLine: 2310
      syntax:
        content:
          CSharp: public Vector2 move
          VB: Public move As Vector2
        return:
          type: Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.PlayerStates.TurnVelocity
      commentId: F:Player.PlayerStates.TurnVelocity
      language: CSharp
      name:
        CSharp: TurnVelocity
        VB: TurnVelocity
      nameWithType:
        CSharp: PlayerStates.TurnVelocity
        VB: PlayerStates.TurnVelocity
      qualifiedName:
        CSharp: Player.PlayerStates.TurnVelocity
        VB: Player.PlayerStates.TurnVelocity
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: TurnVelocity
        path: ''
        startLine: 2311
      syntax:
        content:
          CSharp: public float TurnVelocity
          VB: Public TurnVelocity As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.PlayerStates.moveEnabled
      commentId: F:Player.PlayerStates.moveEnabled
      language: CSharp
      name:
        CSharp: moveEnabled
        VB: moveEnabled
      nameWithType:
        CSharp: PlayerStates.moveEnabled
        VB: PlayerStates.moveEnabled
      qualifiedName:
        CSharp: Player.PlayerStates.moveEnabled
        VB: Player.PlayerStates.moveEnabled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: moveEnabled
        path: ''
        startLine: 2312
      syntax:
        content:
          CSharp: public bool moveEnabled
          VB: Public moveEnabled As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Player.PlayerStates.ability
      commentId: F:Player.PlayerStates.ability
      language: CSharp
      name:
        CSharp: ability
        VB: ability
      nameWithType:
        CSharp: PlayerStates.ability
        VB: PlayerStates.ability
      qualifiedName:
        CSharp: Player.PlayerStates.ability
        VB: Player.PlayerStates.ability
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Player
      source:
        id: ability
        path: ''
        startLine: 2313
      syntax:
        content:
          CSharp: public bool ability
          VB: Public ability As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  UserInterface.PauseMenu.OnResume*:
    name:
      CSharp:
      - id: UserInterface.PauseMenu.OnResume*
        name: OnResume
        nameWithType: PauseMenu.OnResume
        qualifiedName: UserInterface.PauseMenu.OnResume
      VB:
      - id: UserInterface.PauseMenu.OnResume*
        name: OnResume
        nameWithType: PauseMenu.OnResume
        qualifiedName: UserInterface.PauseMenu.OnResume
    isDefinition: true
    commentId: Overload:UserInterface.PauseMenu.OnResume
  UserInterface.PauseMenu.OnExitPause*:
    name:
      CSharp:
      - id: UserInterface.PauseMenu.OnExitPause*
        name: OnExitPause
        nameWithType: PauseMenu.OnExitPause
        qualifiedName: UserInterface.PauseMenu.OnExitPause
      VB:
      - id: UserInterface.PauseMenu.OnExitPause*
        name: OnExitPause
        nameWithType: PauseMenu.OnExitPause
        qualifiedName: UserInterface.PauseMenu.OnExitPause
    isDefinition: true
    commentId: Overload:UserInterface.PauseMenu.OnExitPause
  UserInterface.PauseMenu:
    name:
      CSharp:
      - id: UserInterface.PauseMenu
        name: PauseMenu
        nameWithType: PauseMenu
        qualifiedName: UserInterface.PauseMenu
      VB:
      - id: UserInterface.PauseMenu
        name: PauseMenu
        nameWithType: PauseMenu
        qualifiedName: UserInterface.PauseMenu
    isDefinition: true
    commentId: T:UserInterface.PauseMenu
  UserInterface.MainMenu.OnTutorial*:
    name:
      CSharp:
      - id: UserInterface.MainMenu.OnTutorial*
        name: OnTutorial
        nameWithType: MainMenu.OnTutorial
        qualifiedName: UserInterface.MainMenu.OnTutorial
      VB:
      - id: UserInterface.MainMenu.OnTutorial*
        name: OnTutorial
        nameWithType: MainMenu.OnTutorial
        qualifiedName: UserInterface.MainMenu.OnTutorial
    isDefinition: true
    commentId: Overload:UserInterface.MainMenu.OnTutorial
  UserInterface.MainMenu.OnPlay*:
    name:
      CSharp:
      - id: UserInterface.MainMenu.OnPlay*
        name: OnPlay
        nameWithType: MainMenu.OnPlay
        qualifiedName: UserInterface.MainMenu.OnPlay
      VB:
      - id: UserInterface.MainMenu.OnPlay*
        name: OnPlay
        nameWithType: MainMenu.OnPlay
        qualifiedName: UserInterface.MainMenu.OnPlay
    isDefinition: true
    commentId: Overload:UserInterface.MainMenu.OnPlay
  UserInterface.MainMenu.OnOptions*:
    name:
      CSharp:
      - id: UserInterface.MainMenu.OnOptions*
        name: OnOptions
        nameWithType: MainMenu.OnOptions
        qualifiedName: UserInterface.MainMenu.OnOptions
      VB:
      - id: UserInterface.MainMenu.OnOptions*
        name: OnOptions
        nameWithType: MainMenu.OnOptions
        qualifiedName: UserInterface.MainMenu.OnOptions
    isDefinition: true
    commentId: Overload:UserInterface.MainMenu.OnOptions
  UserInterface.MainMenu.OnExit*:
    name:
      CSharp:
      - id: UserInterface.MainMenu.OnExit*
        name: OnExit
        nameWithType: MainMenu.OnExit
        qualifiedName: UserInterface.MainMenu.OnExit
      VB:
      - id: UserInterface.MainMenu.OnExit*
        name: OnExit
        nameWithType: MainMenu.OnExit
        qualifiedName: UserInterface.MainMenu.OnExit
    isDefinition: true
    commentId: Overload:UserInterface.MainMenu.OnExit
  UserInterface.MainMenu:
    name:
      CSharp:
      - id: UserInterface.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: UserInterface.MainMenu
      VB:
      - id: UserInterface.MainMenu
        name: MainMenu
        nameWithType: MainMenu
        qualifiedName: UserInterface.MainMenu
    isDefinition: true
    commentId: T:UserInterface.MainMenu
  UserInterface.GameModeChooseMenu.OnHoverDragon1Enter*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter*
        name: OnHoverDragon1Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon1Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter*
        name: OnHoverDragon1Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon1Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon1Enter
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon1Enter
  UserInterface.GameModeChooseMenu.OnHoverDragon1Exit*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit*
        name: OnHoverDragon1Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon1Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit*
        name: OnHoverDragon1Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon1Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon1Exit
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon1Exit
  UserInterface.GameModeChooseMenu.OnHoverDragon2Enter*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter*
        name: OnHoverDragon2Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon2Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter*
        name: OnHoverDragon2Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon2Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon2Enter
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon2Enter
  UserInterface.GameModeChooseMenu.OnHoverDragon2Exit*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit*
        name: OnHoverDragon2Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon2Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit*
        name: OnHoverDragon2Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon2Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon2Exit
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon2Exit
  UserInterface.GameModeChooseMenu.OnHoverDragon3Enter*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter*
        name: OnHoverDragon3Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon3Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter*
        name: OnHoverDragon3Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon3Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon3Enter
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon3Enter
  UserInterface.GameModeChooseMenu.OnHoverDragon3Exit*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit*
        name: OnHoverDragon3Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon3Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit*
        name: OnHoverDragon3Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon3Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon3Exit
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon3Exit
  UserInterface.GameModeChooseMenu.OnHoverDragon4Enter*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter*
        name: OnHoverDragon4Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon4Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter*
        name: OnHoverDragon4Enter
        nameWithType: GameModeChooseMenu.OnHoverDragon4Enter
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon4Enter
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon4Enter
  UserInterface.GameModeChooseMenu.OnHoverDragon4Exit*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit*
        name: OnHoverDragon4Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon4Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit*
        name: OnHoverDragon4Exit
        nameWithType: GameModeChooseMenu.OnHoverDragon4Exit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverDragon4Exit
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverDragon4Exit
  UserInterface.GameModeChooseMenu.OnHoverRandom*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverRandom*
        name: OnHoverRandom
        nameWithType: GameModeChooseMenu.OnHoverRandom
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverRandom
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverRandom*
        name: OnHoverRandom
        nameWithType: GameModeChooseMenu.OnHoverRandom
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverRandom
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverRandom
  UserInterface.GameModeChooseMenu.OnHoverRandomExit*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnHoverRandomExit*
        name: OnHoverRandomExit
        nameWithType: GameModeChooseMenu.OnHoverRandomExit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverRandomExit
      VB:
      - id: UserInterface.GameModeChooseMenu.OnHoverRandomExit*
        name: OnHoverRandomExit
        nameWithType: GameModeChooseMenu.OnHoverRandomExit
        qualifiedName: UserInterface.GameModeChooseMenu.OnHoverRandomExit
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnHoverRandomExit
  UserInterface.GameModeChooseMenu.OnRandom*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnRandom*
        name: OnRandom
        nameWithType: GameModeChooseMenu.OnRandom
        qualifiedName: UserInterface.GameModeChooseMenu.OnRandom
      VB:
      - id: UserInterface.GameModeChooseMenu.OnRandom*
        name: OnRandom
        nameWithType: GameModeChooseMenu.OnRandom
        qualifiedName: UserInterface.GameModeChooseMenu.OnRandom
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnRandom
  UserInterface.GameModeChooseMenu.OnSoloDragon1*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon1*
        name: OnSoloDragon1
        nameWithType: GameModeChooseMenu.OnSoloDragon1
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon1
      VB:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon1*
        name: OnSoloDragon1
        nameWithType: GameModeChooseMenu.OnSoloDragon1
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon1
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnSoloDragon1
  UserInterface.GameModeChooseMenu.OnSoloDragon2*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon2*
        name: OnSoloDragon2
        nameWithType: GameModeChooseMenu.OnSoloDragon2
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon2
      VB:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon2*
        name: OnSoloDragon2
        nameWithType: GameModeChooseMenu.OnSoloDragon2
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon2
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnSoloDragon2
  UserInterface.GameModeChooseMenu.OnSoloDragon3*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon3*
        name: OnSoloDragon3
        nameWithType: GameModeChooseMenu.OnSoloDragon3
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon3
      VB:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon3*
        name: OnSoloDragon3
        nameWithType: GameModeChooseMenu.OnSoloDragon3
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon3
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnSoloDragon3
  UserInterface.GameModeChooseMenu.OnSoloDragon4*:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon4*
        name: OnSoloDragon4
        nameWithType: GameModeChooseMenu.OnSoloDragon4
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon4
      VB:
      - id: UserInterface.GameModeChooseMenu.OnSoloDragon4*
        name: OnSoloDragon4
        nameWithType: GameModeChooseMenu.OnSoloDragon4
        qualifiedName: UserInterface.GameModeChooseMenu.OnSoloDragon4
    isDefinition: true
    commentId: Overload:UserInterface.GameModeChooseMenu.OnSoloDragon4
  UserInterface.GameModeChooseMenu:
    name:
      CSharp:
      - id: UserInterface.GameModeChooseMenu
        name: GameModeChooseMenu
        nameWithType: GameModeChooseMenu
        qualifiedName: UserInterface.GameModeChooseMenu
      VB:
      - id: UserInterface.GameModeChooseMenu
        name: GameModeChooseMenu
        nameWithType: GameModeChooseMenu
        qualifiedName: UserInterface.GameModeChooseMenu
    isDefinition: true
    commentId: T:UserInterface.GameModeChooseMenu
  TextMeshProUGUI:
    name:
      CSharp:
      - id: TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
      VB:
      - id: TextMeshProUGUI
        name: TextMeshProUGUI
        nameWithType: TextMeshProUGUI
        qualifiedName: TextMeshProUGUI
        isExternal: true
    isDefinition: true
  UserInterface.ScoresTexts:
    name:
      CSharp:
      - id: UserInterface.ScoresTexts
        name: ScoresTexts
        nameWithType: ScoresTexts
        qualifiedName: UserInterface.ScoresTexts
      VB:
      - id: UserInterface.ScoresTexts
        name: ScoresTexts
        nameWithType: ScoresTexts
        qualifiedName: UserInterface.ScoresTexts
    isDefinition: true
    commentId: T:UserInterface.ScoresTexts
  UserInterface:
    name:
      CSharp:
      - name: UserInterface
        nameWithType: UserInterface
        qualifiedName: UserInterface
      VB:
      - name: UserInterface
        nameWithType: UserInterface
        qualifiedName: UserInterface
    isDefinition: true
    commentId: N:UserInterface
  Health.HealthPackage:
    name:
      CSharp:
      - id: Health.HealthPackage
        name: HealthPackage
        nameWithType: HealthPackage
        qualifiedName: Health.HealthPackage
      VB:
      - id: Health.HealthPackage
        name: HealthPackage
        nameWithType: HealthPackage
        qualifiedName: Health.HealthPackage
    isDefinition: true
    commentId: T:Health.HealthPackage
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Health.Health.CurrentHealth*:
    name:
      CSharp:
      - id: Health.Health.CurrentHealth*
        name: CurrentHealth
        nameWithType: Health.CurrentHealth
        qualifiedName: Health.Health.CurrentHealth
      VB:
      - id: Health.Health.CurrentHealth*
        name: CurrentHealth
        nameWithType: Health.CurrentHealth
        qualifiedName: Health.Health.CurrentHealth
    isDefinition: true
    commentId: Overload:Health.Health.CurrentHealth
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Health.Health.GetDamagedOverTime*:
    name:
      CSharp:
      - id: Health.Health.GetDamagedOverTime*
        name: GetDamagedOverTime
        nameWithType: Health.GetDamagedOverTime
        qualifiedName: Health.Health.GetDamagedOverTime
      VB:
      - id: Health.Health.GetDamagedOverTime*
        name: GetDamagedOverTime
        nameWithType: Health.GetDamagedOverTime
        qualifiedName: Health.Health.GetDamagedOverTime
    isDefinition: true
    commentId: Overload:Health.Health.GetDamagedOverTime
  Health.Health.IncreaseHealth*:
    name:
      CSharp:
      - id: Health.Health.IncreaseHealth*
        name: IncreaseHealth
        nameWithType: Health.IncreaseHealth
        qualifiedName: Health.Health.IncreaseHealth
      VB:
      - id: Health.Health.IncreaseHealth*
        name: IncreaseHealth
        nameWithType: Health.IncreaseHealth
        qualifiedName: Health.Health.IncreaseHealth
    isDefinition: true
    commentId: Overload:Health.Health.IncreaseHealth
  Health.Health.ResetHealth*:
    name:
      CSharp:
      - id: Health.Health.ResetHealth*
        name: ResetHealth
        nameWithType: Health.ResetHealth
        qualifiedName: Health.Health.ResetHealth
      VB:
      - id: Health.Health.ResetHealth*
        name: ResetHealth
        nameWithType: Health.ResetHealth
        qualifiedName: Health.Health.ResetHealth
    isDefinition: true
    commentId: Overload:Health.Health.ResetHealth
  Health.Health:
    name:
      CSharp:
      - id: Health.Health
        name: Health
        nameWithType: Health
        qualifiedName: Health.Health
      VB:
      - id: Health.Health
        name: Health
        nameWithType: Health
        qualifiedName: Health.Health
    isDefinition: true
    commentId: T:Health.Health
  Health:
    name:
      CSharp:
      - name: Health
        nameWithType: Health
        qualifiedName: Health
      VB:
      - name: Health
        nameWithType: Health
        qualifiedName: Health
    isDefinition: true
    commentId: N:Health
  DragonSpawnManager:
    name:
      CSharp:
      - id: DragonSpawnManager
        name: DragonSpawnManager
        nameWithType: DragonSpawnManager
        qualifiedName: DragonSpawnManager
        isExternal: true
      VB:
      - id: DragonSpawnManager
        name: DragonSpawnManager
        nameWithType: DragonSpawnManager
        qualifiedName: DragonSpawnManager
        isExternal: true
    isDefinition: true
    commentId: '!:DragonSpawnManager'
  CustomUtils:
    name:
      CSharp:
      - name: CustomUtils
        nameWithType: CustomUtils
        qualifiedName: CustomUtils
      VB:
      - name: CustomUtils
        nameWithType: CustomUtils
        qualifiedName: CustomUtils
    isDefinition: true
    commentId: N:CustomUtils
  CustomUtils.GameManager:
    name:
      CSharp:
      - id: CustomUtils.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CustomUtils.GameManager
      VB:
      - id: CustomUtils.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CustomUtils.GameManager
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.GameManager
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  CustomUtils.ReferenceTable.SetCurrentEnemy*:
    name:
      CSharp:
      - id: CustomUtils.ReferenceTable.SetCurrentEnemy*
        name: SetCurrentEnemy
        nameWithType: ReferenceTable.SetCurrentEnemy
        qualifiedName: CustomUtils.ReferenceTable.SetCurrentEnemy
      VB:
      - id: CustomUtils.ReferenceTable.SetCurrentEnemy*
        name: SetCurrentEnemy
        nameWithType: ReferenceTable.SetCurrentEnemy
        qualifiedName: CustomUtils.ReferenceTable.SetCurrentEnemy
    isDefinition: true
    commentId: Overload:CustomUtils.ReferenceTable.SetCurrentEnemy
  CustomUtils.ReferenceTable:
    name:
      CSharp:
      - id: CustomUtils.ReferenceTable
        name: ReferenceTable
        nameWithType: ReferenceTable
        qualifiedName: CustomUtils.ReferenceTable
      VB:
      - id: CustomUtils.ReferenceTable
        name: ReferenceTable
        nameWithType: ReferenceTable
        qualifiedName: CustomUtils.ReferenceTable
    isDefinition: true
    commentId: T:CustomUtils.ReferenceTable
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  Scene:
    name:
      CSharp:
      - id: Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Scene
        isExternal: true
      VB:
      - id: Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Scene
        isExternal: true
    isDefinition: true
    commentId: '!:Scene'
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  CustomUtils.SceneManager.LoadScene*:
    name:
      CSharp:
      - id: CustomUtils.SceneManager.LoadScene*
        name: LoadScene
        nameWithType: SceneManager.LoadScene
        qualifiedName: CustomUtils.SceneManager.LoadScene
      VB:
      - id: CustomUtils.SceneManager.LoadScene*
        name: LoadScene
        nameWithType: SceneManager.LoadScene
        qualifiedName: CustomUtils.SceneManager.LoadScene
    isDefinition: true
    commentId: Overload:CustomUtils.SceneManager.LoadScene
  CustomUtils.SceneManager:
    name:
      CSharp:
      - id: CustomUtils.SceneManager
        name: SceneManager
        nameWithType: SceneManager
        qualifiedName: CustomUtils.SceneManager
      VB:
      - id: CustomUtils.SceneManager
        name: SceneManager
        nameWithType: SceneManager
        qualifiedName: CustomUtils.SceneManager
    isDefinition: true
    commentId: T:CustomUtils.SceneManager
  CustomUtils.ScoreSystem.#ctor*:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem.#ctor*
        name: ScoreSystem
        nameWithType: ScoreSystem.ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem.ScoreSystem
      VB:
      - id: CustomUtils.ScoreSystem.#ctor*
        name: ScoreSystem
        nameWithType: ScoreSystem.ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem.ScoreSystem
    isDefinition: true
    commentId: Overload:CustomUtils.ScoreSystem.#ctor
  CustomUtils.ScoreSystem.IncreaseScore*:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem.IncreaseScore*
        name: IncreaseScore
        nameWithType: ScoreSystem.IncreaseScore
        qualifiedName: CustomUtils.ScoreSystem.IncreaseScore
      VB:
      - id: CustomUtils.ScoreSystem.IncreaseScore*
        name: IncreaseScore
        nameWithType: ScoreSystem.IncreaseScore
        qualifiedName: CustomUtils.ScoreSystem.IncreaseScore
    isDefinition: true
    commentId: Overload:CustomUtils.ScoreSystem.IncreaseScore
  CustomUtils.ScoreSystem.GetScore*:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem.GetScore*
        name: GetScore
        nameWithType: ScoreSystem.GetScore
        qualifiedName: CustomUtils.ScoreSystem.GetScore
      VB:
      - id: CustomUtils.ScoreSystem.GetScore*
        name: GetScore
        nameWithType: ScoreSystem.GetScore
        qualifiedName: CustomUtils.ScoreSystem.GetScore
    isDefinition: true
    commentId: Overload:CustomUtils.ScoreSystem.GetScore
  CustomUtils.ScoreSystem:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem
        name: ScoreSystem
        nameWithType: ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem
      VB:
      - id: CustomUtils.ScoreSystem
        name: ScoreSystem
        nameWithType: ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.ScoreSystem
  CustomUtils.ScoreSystem.CompareTo*:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem.CompareTo*
        name: CompareTo
        nameWithType: ScoreSystem.CompareTo
        qualifiedName: CustomUtils.ScoreSystem.CompareTo
      VB:
      - id: CustomUtils.ScoreSystem.CompareTo*
        name: CompareTo
        nameWithType: ScoreSystem.CompareTo
        qualifiedName: CustomUtils.ScoreSystem.CompareTo
    isDefinition: true
    commentId: Overload:CustomUtils.ScoreSystem.CompareTo
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  CustomUtils.FightTimer.Reset*:
    name:
      CSharp:
      - id: CustomUtils.FightTimer.Reset*
        name: Reset
        nameWithType: FightTimer.Reset
        qualifiedName: CustomUtils.FightTimer.Reset
      VB:
      - id: CustomUtils.FightTimer.Reset*
        name: Reset
        nameWithType: FightTimer.Reset
        qualifiedName: CustomUtils.FightTimer.Reset
    isDefinition: true
    commentId: Overload:CustomUtils.FightTimer.Reset
  CustomUtils.FightTimer.OnFight*:
    name:
      CSharp:
      - id: CustomUtils.FightTimer.OnFight*
        name: OnFight
        nameWithType: FightTimer.OnFight
        qualifiedName: CustomUtils.FightTimer.OnFight
      VB:
      - id: CustomUtils.FightTimer.OnFight*
        name: OnFight
        nameWithType: FightTimer.OnFight
        qualifiedName: CustomUtils.FightTimer.OnFight
    isDefinition: true
    commentId: Overload:CustomUtils.FightTimer.OnFight
  CustomUtils.FightTimer.OnPause*:
    name:
      CSharp:
      - id: CustomUtils.FightTimer.OnPause*
        name: OnPause
        nameWithType: FightTimer.OnPause
        qualifiedName: CustomUtils.FightTimer.OnPause
      VB:
      - id: CustomUtils.FightTimer.OnPause*
        name: OnPause
        nameWithType: FightTimer.OnPause
        qualifiedName: CustomUtils.FightTimer.OnPause
    isDefinition: true
    commentId: Overload:CustomUtils.FightTimer.OnPause
  CustomUtils.FightTimer:
    name:
      CSharp:
      - id: CustomUtils.FightTimer
        name: FightTimer
        nameWithType: FightTimer
        qualifiedName: CustomUtils.FightTimer
      VB:
      - id: CustomUtils.FightTimer
        name: FightTimer
        nameWithType: FightTimer
        qualifiedName: CustomUtils.FightTimer
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.FightTimer
  CustomUtils.ScoreSystem[]:
    name:
      CSharp:
      - id: CustomUtils.ScoreSystem
        name: ScoreSystem
        nameWithType: ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: CustomUtils.ScoreSystem
        name: ScoreSystem
        nameWithType: ScoreSystem
        qualifiedName: CustomUtils.ScoreSystem
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  CustomUtils.SaveAndRestoreScoreList.#ctor*:
    name:
      CSharp:
      - id: CustomUtils.SaveAndRestoreScoreList.#ctor*
        name: SaveAndRestoreScoreList
        nameWithType: SaveAndRestoreScoreList.SaveAndRestoreScoreList
        qualifiedName: CustomUtils.SaveAndRestoreScoreList.SaveAndRestoreScoreList
      VB:
      - id: CustomUtils.SaveAndRestoreScoreList.#ctor*
        name: SaveAndRestoreScoreList
        nameWithType: SaveAndRestoreScoreList.SaveAndRestoreScoreList
        qualifiedName: CustomUtils.SaveAndRestoreScoreList.SaveAndRestoreScoreList
    isDefinition: true
    commentId: Overload:CustomUtils.SaveAndRestoreScoreList.#ctor
  CustomUtils.SaveAndRestoreScoreList.SaveScore*:
    name:
      CSharp:
      - id: CustomUtils.SaveAndRestoreScoreList.SaveScore*
        name: SaveScore
        nameWithType: SaveAndRestoreScoreList.SaveScore
        qualifiedName: CustomUtils.SaveAndRestoreScoreList.SaveScore
      VB:
      - id: CustomUtils.SaveAndRestoreScoreList.SaveScore*
        name: SaveScore
        nameWithType: SaveAndRestoreScoreList.SaveScore
        qualifiedName: CustomUtils.SaveAndRestoreScoreList.SaveScore
    isDefinition: true
    commentId: Overload:CustomUtils.SaveAndRestoreScoreList.SaveScore
  CustomUtils.SaveAndRestoreScoreList:
    name:
      CSharp:
      - id: CustomUtils.SaveAndRestoreScoreList
        name: SaveAndRestoreScoreList
        nameWithType: SaveAndRestoreScoreList
        qualifiedName: CustomUtils.SaveAndRestoreScoreList
      VB:
      - id: CustomUtils.SaveAndRestoreScoreList
        name: SaveAndRestoreScoreList
        nameWithType: SaveAndRestoreScoreList
        qualifiedName: CustomUtils.SaveAndRestoreScoreList
    isDefinition: true
    commentId: T:CustomUtils.SaveAndRestoreScoreList
  CineMachineSwitcher:
    name:
      CSharp:
      - id: CineMachineSwitcher
        name: CineMachineSwitcher
        nameWithType: CineMachineSwitcher
        qualifiedName: CineMachineSwitcher
        isExternal: true
      VB:
      - id: CineMachineSwitcher
        name: CineMachineSwitcher
        nameWithType: CineMachineSwitcher
        qualifiedName: CineMachineSwitcher
        isExternal: true
    isDefinition: true
    commentId: '!:CineMachineSwitcher'
  CustomUtils.GameManager.GameState:
    name:
      CSharp:
      - id: CustomUtils.GameManager.GameState
        name: GameManager.GameState
        nameWithType: GameManager.GameState
        qualifiedName: CustomUtils.GameManager.GameState
      VB:
      - id: CustomUtils.GameManager.GameState
        name: GameManager.GameState
        nameWithType: GameManager.GameState
        qualifiedName: CustomUtils.GameManager.GameState
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.GameManager.GameState
  CustomUtils.GameManager.SetState*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.SetState*
        name: SetState
        nameWithType: GameManager.SetState
        qualifiedName: CustomUtils.GameManager.SetState
      VB:
      - id: CustomUtils.GameManager.SetState*
        name: SetState
        nameWithType: GameManager.SetState
        qualifiedName: CustomUtils.GameManager.SetState
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.SetState
  CustomUtils.GameManager.EnableGameModeUI*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.EnableGameModeUI*
        name: EnableGameModeUI
        nameWithType: GameManager.EnableGameModeUI
        qualifiedName: CustomUtils.GameManager.EnableGameModeUI
      VB:
      - id: CustomUtils.GameManager.EnableGameModeUI*
        name: EnableGameModeUI
        nameWithType: GameManager.EnableGameModeUI
        qualifiedName: CustomUtils.GameManager.EnableGameModeUI
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.EnableGameModeUI
  CustomUtils.GameManager.GameMode:
    name:
      CSharp:
      - id: CustomUtils.GameManager.GameMode
        name: GameManager.GameMode
        nameWithType: GameManager.GameMode
        qualifiedName: CustomUtils.GameManager.GameMode
      VB:
      - id: CustomUtils.GameManager.GameMode
        name: GameManager.GameMode
        nameWithType: GameManager.GameMode
        qualifiedName: CustomUtils.GameManager.GameMode
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.GameManager.GameMode
  CustomUtils.GameManager.SetGameMode*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.SetGameMode*
        name: SetGameMode
        nameWithType: GameManager.SetGameMode
        qualifiedName: CustomUtils.GameManager.SetGameMode
      VB:
      - id: CustomUtils.GameManager.SetGameMode*
        name: SetGameMode
        nameWithType: GameManager.SetGameMode
        qualifiedName: CustomUtils.GameManager.SetGameMode
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.SetGameMode
  CustomUtils.GameManager.UpdateScore*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.UpdateScore*
        name: UpdateScore
        nameWithType: GameManager.UpdateScore
        qualifiedName: CustomUtils.GameManager.UpdateScore
      VB:
      - id: CustomUtils.GameManager.UpdateScore*
        name: UpdateScore
        nameWithType: GameManager.UpdateScore
        qualifiedName: CustomUtils.GameManager.UpdateScore
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.UpdateScore
  CustomUtils.GameManager.SetTutorialDone*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.SetTutorialDone*
        name: SetTutorialDone
        nameWithType: GameManager.SetTutorialDone
        qualifiedName: CustomUtils.GameManager.SetTutorialDone
      VB:
      - id: CustomUtils.GameManager.SetTutorialDone*
        name: SetTutorialDone
        nameWithType: GameManager.SetTutorialDone
        qualifiedName: CustomUtils.GameManager.SetTutorialDone
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.SetTutorialDone
  CustomUtils.GameManager.EnableOptionsMenu*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.EnableOptionsMenu*
        name: EnableOptionsMenu
        nameWithType: GameManager.EnableOptionsMenu
        qualifiedName: CustomUtils.GameManager.EnableOptionsMenu
      VB:
      - id: CustomUtils.GameManager.EnableOptionsMenu*
        name: EnableOptionsMenu
        nameWithType: GameManager.EnableOptionsMenu
        qualifiedName: CustomUtils.GameManager.EnableOptionsMenu
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.EnableOptionsMenu
  CustomUtils.GameManager.DisableOptionsMenu*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.DisableOptionsMenu*
        name: DisableOptionsMenu
        nameWithType: GameManager.DisableOptionsMenu
        qualifiedName: CustomUtils.GameManager.DisableOptionsMenu
      VB:
      - id: CustomUtils.GameManager.DisableOptionsMenu*
        name: DisableOptionsMenu
        nameWithType: GameManager.DisableOptionsMenu
        qualifiedName: CustomUtils.GameManager.DisableOptionsMenu
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.DisableOptionsMenu
  CustomUtils.GameManager.DisableGameModeChoose*:
    name:
      CSharp:
      - id: CustomUtils.GameManager.DisableGameModeChoose*
        name: DisableGameModeChoose
        nameWithType: GameManager.DisableGameModeChoose
        qualifiedName: CustomUtils.GameManager.DisableGameModeChoose
      VB:
      - id: CustomUtils.GameManager.DisableGameModeChoose*
        name: DisableGameModeChoose
        nameWithType: GameManager.DisableGameModeChoose
        qualifiedName: CustomUtils.GameManager.DisableGameModeChoose
    isDefinition: true
    commentId: Overload:CustomUtils.GameManager.DisableGameModeChoose
  CustomUtils.CursorManager.CursorEvent:
    name:
      CSharp:
      - id: CustomUtils.CursorManager.CursorEvent
        name: CursorManager.CursorEvent
        nameWithType: CursorManager.CursorEvent
        qualifiedName: CustomUtils.CursorManager.CursorEvent
      VB:
      - id: CustomUtils.CursorManager.CursorEvent
        name: CursorManager.CursorEvent
        nameWithType: CursorManager.CursorEvent
        qualifiedName: CustomUtils.CursorManager.CursorEvent
    isDefinition: true
    parent: CustomUtils
    commentId: T:CustomUtils.CursorManager.CursorEvent
  CustomUtils.CursorManager.SetCursor*:
    name:
      CSharp:
      - id: CustomUtils.CursorManager.SetCursor*
        name: SetCursor
        nameWithType: CursorManager.SetCursor
        qualifiedName: CustomUtils.CursorManager.SetCursor
      VB:
      - id: CustomUtils.CursorManager.SetCursor*
        name: SetCursor
        nameWithType: CursorManager.SetCursor
        qualifiedName: CustomUtils.CursorManager.SetCursor
    isDefinition: true
    commentId: Overload:CustomUtils.CursorManager.SetCursor
  CustomUtils.CursorManager:
    name:
      CSharp:
      - id: CustomUtils.CursorManager
        name: CursorManager
        nameWithType: CursorManager
        qualifiedName: CustomUtils.CursorManager
      VB:
      - id: CustomUtils.CursorManager
        name: CursorManager
        nameWithType: CursorManager
        qualifiedName: CustomUtils.CursorManager
    isDefinition: true
    commentId: T:CustomUtils.CursorManager
  Enemy.FieldOfView.SeeRadius*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.SeeRadius*
        name: SeeRadius
        nameWithType: FieldOfView.SeeRadius
        qualifiedName: Enemy.FieldOfView.SeeRadius
      VB:
      - id: Enemy.FieldOfView.SeeRadius*
        name: SeeRadius
        nameWithType: FieldOfView.SeeRadius
        qualifiedName: Enemy.FieldOfView.SeeRadius
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.SeeRadius
  Enemy.FieldOfView.Angle*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.Angle*
        name: Angle
        nameWithType: FieldOfView.Angle
        qualifiedName: Enemy.FieldOfView.Angle
      VB:
      - id: Enemy.FieldOfView.Angle*
        name: Angle
        nameWithType: FieldOfView.Angle
        qualifiedName: Enemy.FieldOfView.Angle
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.Angle
  Enemy.FieldOfView.BumpRadius*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.BumpRadius*
        name: BumpRadius
        nameWithType: FieldOfView.BumpRadius
        qualifiedName: Enemy.FieldOfView.BumpRadius
      VB:
      - id: Enemy.FieldOfView.BumpRadius*
        name: BumpRadius
        nameWithType: FieldOfView.BumpRadius
        qualifiedName: Enemy.FieldOfView.BumpRadius
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.BumpRadius
  Enemy.FieldOfView.CanSeePlayer*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.CanSeePlayer*
        name: CanSeePlayer
        nameWithType: FieldOfView.CanSeePlayer
        qualifiedName: Enemy.FieldOfView.CanSeePlayer
      VB:
      - id: Enemy.FieldOfView.CanSeePlayer*
        name: CanSeePlayer
        nameWithType: FieldOfView.CanSeePlayer
        qualifiedName: Enemy.FieldOfView.CanSeePlayer
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.CanSeePlayer
  Enemy.FieldOfView.SeenTimer*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.SeenTimer*
        name: SeenTimer
        nameWithType: FieldOfView.SeenTimer
        qualifiedName: Enemy.FieldOfView.SeenTimer
      VB:
      - id: Enemy.FieldOfView.SeenTimer*
        name: SeenTimer
        nameWithType: FieldOfView.SeenTimer
        qualifiedName: Enemy.FieldOfView.SeenTimer
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.SeenTimer
  IEnumerator:
    name:
      CSharp:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      VB:
      - id: IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
    isDefinition: true
    commentId: '!:IEnumerator'
  Enemy.FieldOfView.FOVRoutine*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.FOVRoutine*
        name: FOVRoutine
        nameWithType: FieldOfView.FOVRoutine
        qualifiedName: Enemy.FieldOfView.FOVRoutine
      VB:
      - id: Enemy.FieldOfView.FOVRoutine*
        name: FOVRoutine
        nameWithType: FieldOfView.FOVRoutine
        qualifiedName: Enemy.FieldOfView.FOVRoutine
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.FOVRoutine
  Enemy.FieldOfView.CalcDetectTime*:
    name:
      CSharp:
      - id: Enemy.FieldOfView.CalcDetectTime*
        name: CalcDetectTime
        nameWithType: FieldOfView.CalcDetectTime
        qualifiedName: Enemy.FieldOfView.CalcDetectTime
      VB:
      - id: Enemy.FieldOfView.CalcDetectTime*
        name: CalcDetectTime
        nameWithType: FieldOfView.CalcDetectTime
        qualifiedName: Enemy.FieldOfView.CalcDetectTime
    isDefinition: true
    commentId: Overload:Enemy.FieldOfView.CalcDetectTime
  Enemy.FieldOfView:
    name:
      CSharp:
      - id: Enemy.FieldOfView
        name: FieldOfView
        nameWithType: FieldOfView
        qualifiedName: Enemy.FieldOfView
      VB:
      - id: Enemy.FieldOfView
        name: FieldOfView
        nameWithType: FieldOfView
        qualifiedName: Enemy.FieldOfView
    isDefinition: true
    parent: Enemy
    commentId: T:Enemy.FieldOfView
  Enemy.DragonSpawnManager.SpawnDragon*:
    name:
      CSharp:
      - id: Enemy.DragonSpawnManager.SpawnDragon*
        name: SpawnDragon
        nameWithType: DragonSpawnManager.SpawnDragon
        qualifiedName: Enemy.DragonSpawnManager.SpawnDragon
      VB:
      - id: Enemy.DragonSpawnManager.SpawnDragon*
        name: SpawnDragon
        nameWithType: DragonSpawnManager.SpawnDragon
        qualifiedName: Enemy.DragonSpawnManager.SpawnDragon
    isDefinition: true
    commentId: Overload:Enemy.DragonSpawnManager.SpawnDragon
  Enemy.DragonSpawnManager:
    name:
      CSharp:
      - id: Enemy.DragonSpawnManager
        name: DragonSpawnManager
        nameWithType: DragonSpawnManager
        qualifiedName: Enemy.DragonSpawnManager
      VB:
      - id: Enemy.DragonSpawnManager
        name: DragonSpawnManager
        nameWithType: DragonSpawnManager
        qualifiedName: Enemy.DragonSpawnManager
    isDefinition: true
    commentId: T:Enemy.DragonSpawnManager
  Enemy.TornadoDragon:
    name:
      CSharp:
      - id: Enemy.TornadoDragon
        name: TornadoDragon
        nameWithType: TornadoDragon
        qualifiedName: Enemy.TornadoDragon
      VB:
      - id: Enemy.TornadoDragon
        name: TornadoDragon
        nameWithType: TornadoDragon
        qualifiedName: Enemy.TornadoDragon
    isDefinition: true
    commentId: T:Enemy.TornadoDragon
  Enemy.DestroyMultipleTornado:
    name:
      CSharp:
      - id: Enemy.DestroyMultipleTornado
        name: DestroyMultipleTornado
        nameWithType: DestroyMultipleTornado
        qualifiedName: Enemy.DestroyMultipleTornado
      VB:
      - id: Enemy.DestroyMultipleTornado
        name: DestroyMultipleTornado
        nameWithType: DestroyMultipleTornado
        qualifiedName: Enemy.DestroyMultipleTornado
    isDefinition: true
    commentId: T:Enemy.DestroyMultipleTornado
  Enemy.EnemyMeleeAnimations:
    name:
      CSharp:
      - id: Enemy.EnemyMeleeAnimations
        name: EnemyMeleeAnimations
        nameWithType: EnemyMeleeAnimations
        qualifiedName: Enemy.EnemyMeleeAnimations
      VB:
      - id: Enemy.EnemyMeleeAnimations
        name: EnemyMeleeAnimations
        nameWithType: EnemyMeleeAnimations
        qualifiedName: Enemy.EnemyMeleeAnimations
    isDefinition: true
    commentId: T:Enemy.EnemyMeleeAnimations
  Enemy:
    name:
      CSharp:
      - name: Enemy
        nameWithType: Enemy
        qualifiedName: Enemy
      VB:
      - name: Enemy
        nameWithType: Enemy
        qualifiedName: Enemy
    isDefinition: true
    commentId: N:Enemy
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:List`1'
  List{Vector3}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Vector3}'
  Enemy.EnemyStates:
    name:
      CSharp:
      - id: Enemy.EnemyStates
        name: EnemyStates
        nameWithType: EnemyStates
        qualifiedName: Enemy.EnemyStates
      VB:
      - id: Enemy.EnemyStates
        name: EnemyStates
        nameWithType: EnemyStates
        qualifiedName: Enemy.EnemyStates
    isDefinition: true
    parent: Enemy
    commentId: T:Enemy.EnemyStates
  Enemy.Enemy.State*:
    name:
      CSharp:
      - id: Enemy.Enemy.State*
        name: State
        nameWithType: Enemy.State
        qualifiedName: Enemy.Enemy.State
      VB:
      - id: Enemy.Enemy.State*
        name: State
        nameWithType: Enemy.State
        qualifiedName: Enemy.Enemy.State
    isDefinition: true
    commentId: Overload:Enemy.Enemy.State
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
    commentId: '!:Vector3'
  Enemy.Enemy.GettingHit*:
    name:
      CSharp:
      - id: Enemy.Enemy.GettingHit*
        name: GettingHit
        nameWithType: Enemy.GettingHit
        qualifiedName: Enemy.Enemy.GettingHit
      VB:
      - id: Enemy.Enemy.GettingHit*
        name: GettingHit
        nameWithType: Enemy.GettingHit
        qualifiedName: Enemy.Enemy.GettingHit
    isDefinition: true
    commentId: Overload:Enemy.Enemy.GettingHit
  Enemy.Enemy:
    name:
      CSharp:
      - id: Enemy.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: Enemy.Enemy
      VB:
      - id: Enemy.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: Enemy.Enemy
    isDefinition: true
    commentId: T:Enemy.Enemy
  Enemy.EnemyAttacks:
    name:
      CSharp:
      - id: Enemy.EnemyAttacks
        name: EnemyAttacks
        nameWithType: EnemyAttacks
        qualifiedName: Enemy.EnemyAttacks
      VB:
      - id: Enemy.EnemyAttacks
        name: EnemyAttacks
        nameWithType: EnemyAttacks
        qualifiedName: Enemy.EnemyAttacks
    isDefinition: true
    commentId: T:Enemy.EnemyAttacks
  Enemy.EnemyRangedAnimations:
    name:
      CSharp:
      - id: Enemy.EnemyRangedAnimations
        name: EnemyRangedAnimations
        nameWithType: EnemyRangedAnimations
        qualifiedName: Enemy.EnemyRangedAnimations
      VB:
      - id: Enemy.EnemyRangedAnimations
        name: EnemyRangedAnimations
        nameWithType: EnemyRangedAnimations
        qualifiedName: Enemy.EnemyRangedAnimations
    isDefinition: true
    commentId: T:Enemy.EnemyRangedAnimations
  Enemy.FireBallDragon:
    name:
      CSharp:
      - id: Enemy.FireBallDragon
        name: FireBallDragon
        nameWithType: FireBallDragon
        qualifiedName: Enemy.FireBallDragon
      VB:
      - id: Enemy.FireBallDragon
        name: FireBallDragon
        nameWithType: FireBallDragon
        qualifiedName: Enemy.FireBallDragon
    isDefinition: true
    commentId: T:Enemy.FireBallDragon
  AudioSource:
    name:
      CSharp:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
      VB:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
    isDefinition: true
  AudioClip:
    name:
      CSharp:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
      VB:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
    isDefinition: true
    commentId: '!:AudioClip'
  Sound.SoundSource.Play*:
    name:
      CSharp:
      - id: Sound.SoundSource.Play*
        name: Play
        nameWithType: SoundSource.Play
        qualifiedName: Sound.SoundSource.Play
      VB:
      - id: Sound.SoundSource.Play*
        name: Play
        nameWithType: SoundSource.Play
        qualifiedName: Sound.SoundSource.Play
    isDefinition: true
    commentId: Overload:Sound.SoundSource.Play
  Sound.SoundSource.Reset*:
    name:
      CSharp:
      - id: Sound.SoundSource.Reset*
        name: Reset
        nameWithType: SoundSource.Reset
        qualifiedName: Sound.SoundSource.Reset
      VB:
      - id: Sound.SoundSource.Reset*
        name: Reset
        nameWithType: SoundSource.Reset
        qualifiedName: Sound.SoundSource.Reset
    isDefinition: true
    commentId: Overload:Sound.SoundSource.Reset
  Sound.SoundSource:
    name:
      CSharp:
      - id: Sound.SoundSource
        name: SoundSource
        nameWithType: SoundSource
        qualifiedName: Sound.SoundSource
      VB:
      - id: Sound.SoundSource
        name: SoundSource
        nameWithType: SoundSource
        qualifiedName: Sound.SoundSource
    isDefinition: true
    parent: Sound
    commentId: T:Sound.SoundSource
  Sound:
    name:
      CSharp:
      - name: Sound
        nameWithType: Sound
        qualifiedName: Sound
      VB:
      - name: Sound
        nameWithType: Sound
        qualifiedName: Sound
    isDefinition: true
    commentId: N:Sound
  Sound.SoundManager.OnSoundEffect*:
    name:
      CSharp:
      - id: Sound.SoundManager.OnSoundEffect*
        name: OnSoundEffect
        nameWithType: SoundManager.OnSoundEffect
        qualifiedName: Sound.SoundManager.OnSoundEffect
      VB:
      - id: Sound.SoundManager.OnSoundEffect*
        name: OnSoundEffect
        nameWithType: SoundManager.OnSoundEffect
        qualifiedName: Sound.SoundManager.OnSoundEffect
    isDefinition: true
    commentId: Overload:Sound.SoundManager.OnSoundEffect
  Slider:
    name:
      CSharp:
      - id: Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
  Sound.SoundManager.VolumeChangeMusic*:
    name:
      CSharp:
      - id: Sound.SoundManager.VolumeChangeMusic*
        name: VolumeChangeMusic
        nameWithType: SoundManager.VolumeChangeMusic
        qualifiedName: Sound.SoundManager.VolumeChangeMusic
      VB:
      - id: Sound.SoundManager.VolumeChangeMusic*
        name: VolumeChangeMusic
        nameWithType: SoundManager.VolumeChangeMusic
        qualifiedName: Sound.SoundManager.VolumeChangeMusic
    isDefinition: true
    commentId: Overload:Sound.SoundManager.VolumeChangeMusic
  Sound.SoundManager.VolumeChangeEffects*:
    name:
      CSharp:
      - id: Sound.SoundManager.VolumeChangeEffects*
        name: VolumeChangeEffects
        nameWithType: SoundManager.VolumeChangeEffects
        qualifiedName: Sound.SoundManager.VolumeChangeEffects
      VB:
      - id: Sound.SoundManager.VolumeChangeEffects*
        name: VolumeChangeEffects
        nameWithType: SoundManager.VolumeChangeEffects
        qualifiedName: Sound.SoundManager.VolumeChangeEffects
    isDefinition: true
    commentId: Overload:Sound.SoundManager.VolumeChangeEffects
  Sound.SoundManager:
    name:
      CSharp:
      - id: Sound.SoundManager
        name: SoundManager
        nameWithType: SoundManager
        qualifiedName: Sound.SoundManager
      VB:
      - id: Sound.SoundManager
        name: SoundManager
        nameWithType: SoundManager
        qualifiedName: Sound.SoundManager
    isDefinition: true
    commentId: T:Sound.SoundManager
  CinemachineVirtualCamera:
    name:
      CSharp:
      - id: CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
      VB:
      - id: CinemachineVirtualCamera
        name: CinemachineVirtualCamera
        nameWithType: CinemachineVirtualCamera
        qualifiedName: CinemachineVirtualCamera
        isExternal: true
    isDefinition: true
    commentId: '!:CinemachineVirtualCamera'
  Player.CineMachineSwitcher.SwitchLock*:
    name:
      CSharp:
      - id: Player.CineMachineSwitcher.SwitchLock*
        name: SwitchLock
        nameWithType: CineMachineSwitcher.SwitchLock
        qualifiedName: Player.CineMachineSwitcher.SwitchLock
      VB:
      - id: Player.CineMachineSwitcher.SwitchLock*
        name: SwitchLock
        nameWithType: CineMachineSwitcher.SwitchLock
        qualifiedName: Player.CineMachineSwitcher.SwitchLock
    isDefinition: true
    commentId: Overload:Player.CineMachineSwitcher.SwitchLock
  Player.CineMachineSwitcher:
    name:
      CSharp:
      - id: Player.CineMachineSwitcher
        name: CineMachineSwitcher
        nameWithType: CineMachineSwitcher
        qualifiedName: Player.CineMachineSwitcher
      VB:
      - id: Player.CineMachineSwitcher
        name: CineMachineSwitcher
        nameWithType: CineMachineSwitcher
        qualifiedName: Player.CineMachineSwitcher
    isDefinition: true
    commentId: T:Player.CineMachineSwitcher
  Player:
    name:
      CSharp:
      - name: Player
        nameWithType: Player
        qualifiedName: Player
      VB:
      - name: Player
        nameWithType: Player
        qualifiedName: Player
    isDefinition: true
    commentId: N:Player
  Player.PlayerStates:
    name:
      CSharp:
      - id: Player.PlayerStates
        name: PlayerStates
        nameWithType: PlayerStates
        qualifiedName: Player.PlayerStates
      VB:
      - id: Player.PlayerStates
        name: PlayerStates
        nameWithType: PlayerStates
        qualifiedName: Player.PlayerStates
    isDefinition: true
    parent: Player
    commentId: T:Player.PlayerStates
  Player.MovementController.States*:
    name:
      CSharp:
      - id: Player.MovementController.States*
        name: States
        nameWithType: MovementController.States
        qualifiedName: Player.MovementController.States
      VB:
      - id: Player.MovementController.States*
        name: States
        nameWithType: MovementController.States
        qualifiedName: Player.MovementController.States
    isDefinition: true
    commentId: Overload:Player.MovementController.States
  Player.MovementController:
    name:
      CSharp:
      - id: Player.MovementController
        name: MovementController
        nameWithType: MovementController
        qualifiedName: Player.MovementController
      VB:
      - id: Player.MovementController
        name: MovementController
        nameWithType: MovementController
        qualifiedName: Player.MovementController
    isDefinition: true
    commentId: T:Player.MovementController
  Player.FireBallPlayer:
    name:
      CSharp:
      - id: Player.FireBallPlayer
        name: FireBallPlayer
        nameWithType: FireBallPlayer
        qualifiedName: Player.FireBallPlayer
      VB:
      - id: Player.FireBallPlayer
        name: FireBallPlayer
        nameWithType: FireBallPlayer
        qualifiedName: Player.FireBallPlayer
    isDefinition: true
    commentId: T:Player.FireBallPlayer
  Player.Controller.GotHit*:
    name:
      CSharp:
      - id: Player.Controller.GotHit*
        name: GotHit
        nameWithType: Controller.GotHit
        qualifiedName: Player.Controller.GotHit
      VB:
      - id: Player.Controller.GotHit*
        name: GotHit
        nameWithType: Controller.GotHit
        qualifiedName: Player.Controller.GotHit
    isDefinition: true
    commentId: Overload:Player.Controller.GotHit
  Player.Controller.UpdateScore*:
    name:
      CSharp:
      - id: Player.Controller.UpdateScore*
        name: UpdateScore
        nameWithType: Controller.UpdateScore
        qualifiedName: Player.Controller.UpdateScore
      VB:
      - id: Player.Controller.UpdateScore*
        name: UpdateScore
        nameWithType: Controller.UpdateScore
        qualifiedName: Player.Controller.UpdateScore
    isDefinition: true
    commentId: Overload:Player.Controller.UpdateScore
  Player.Controller.GetScore*:
    name:
      CSharp:
      - id: Player.Controller.GetScore*
        name: GetScore
        nameWithType: Controller.GetScore
        qualifiedName: Player.Controller.GetScore
      VB:
      - id: Player.Controller.GetScore*
        name: GetScore
        nameWithType: Controller.GetScore
        qualifiedName: Player.Controller.GetScore
    isDefinition: true
    commentId: Overload:Player.Controller.GetScore
  Player.Controller.GetScoreSystem*:
    name:
      CSharp:
      - id: Player.Controller.GetScoreSystem*
        name: GetScoreSystem
        nameWithType: Controller.GetScoreSystem
        qualifiedName: Player.Controller.GetScoreSystem
      VB:
      - id: Player.Controller.GetScoreSystem*
        name: GetScoreSystem
        nameWithType: Controller.GetScoreSystem
        qualifiedName: Player.Controller.GetScoreSystem
    isDefinition: true
    commentId: Overload:Player.Controller.GetScoreSystem
  Player.Controller.ResetScore*:
    name:
      CSharp:
      - id: Player.Controller.ResetScore*
        name: ResetScore
        nameWithType: Controller.ResetScore
        qualifiedName: Player.Controller.ResetScore
      VB:
      - id: Player.Controller.ResetScore*
        name: ResetScore
        nameWithType: Controller.ResetScore
        qualifiedName: Player.Controller.ResetScore
    isDefinition: true
    commentId: Overload:Player.Controller.ResetScore
  Player.Controller:
    name:
      CSharp:
      - id: Player.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: Player.Controller
      VB:
      - id: Player.Controller
        name: Controller
        nameWithType: Controller
        qualifiedName: Player.Controller
    isDefinition: true
    commentId: T:Player.Controller
  Player.Attacks:
    name:
      CSharp:
      - id: Player.Attacks
        name: Attacks
        nameWithType: Attacks
        qualifiedName: Player.Attacks
      VB:
      - id: Player.Attacks
        name: Attacks
        nameWithType: Attacks
        qualifiedName: Player.Attacks
    isDefinition: true
    commentId: T:Player.Attacks
  Player.AnimationHandler:
    name:
      CSharp:
      - id: Player.AnimationHandler
        name: AnimationHandler
        nameWithType: AnimationHandler
        qualifiedName: Player.AnimationHandler
      VB:
      - id: Player.AnimationHandler
        name: AnimationHandler
        nameWithType: AnimationHandler
        qualifiedName: Player.AnimationHandler
    isDefinition: true
    commentId: T:Player.AnimationHandler
  Player.PlayerAnimationState:
    name:
      CSharp:
      - id: Player.PlayerAnimationState
        name: PlayerAnimationState
        nameWithType: PlayerAnimationState
        qualifiedName: Player.PlayerAnimationState
      VB:
      - id: Player.PlayerAnimationState
        name: PlayerAnimationState
        nameWithType: PlayerAnimationState
        qualifiedName: Player.PlayerAnimationState
    isDefinition: true
    commentId: T:Player.PlayerAnimationState
  Vector2:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
    commentId: '!:Vector2'
